ARM GAS  /tmp/ccAhweWZ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_hal_timebase_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32g0xx_hal_timebase_tim.c"
  18              		.section	.text.HAL_InitTick,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_InitTick
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_InitTick:
  26              	.LVL0:
  27              	.LFB496:
   1:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32g0xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32g0xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @file    stm32g0xx_hal_timebase_tim.c
   5:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32g0xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32g0xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * All rights reserved.
  11:Core/Src/stm32g0xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * in the root directory of this software component.
  14:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32g0xx_hal_timebase_tim.c ****   *
  16:Core/Src/stm32g0xx_hal_timebase_tim.c ****   ******************************************************************************
  17:Core/Src/stm32g0xx_hal_timebase_tim.c ****   */
  18:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* USER CODE END Header */
  19:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  20:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32g0xx_hal_timebase_tim.c **** #include "stm32g0xx_hal.h"
  22:Core/Src/stm32g0xx_hal_timebase_tim.c **** #include "stm32g0xx_hal_tim.h"
  23:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  24:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  25:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  26:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  27:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  28:Core/Src/stm32g0xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim1;
  29:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  30:Core/Src/stm32g0xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  31:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
ARM GAS  /tmp/ccAhweWZ.s 			page 2


  32:Core/Src/stm32g0xx_hal_timebase_tim.c **** /**
  33:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM1 as a time base source.
  34:Core/Src/stm32g0xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  35:Core/Src/stm32g0xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  36:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  37:Core/Src/stm32g0xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  38:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  39:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @retval HAL status
  40:Core/Src/stm32g0xx_hal_timebase_tim.c ****   */
  41:Core/Src/stm32g0xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  42:Core/Src/stm32g0xx_hal_timebase_tim.c **** {
  28              		.loc 1 42 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 42 1 is_stmt 0 view .LVU1
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 87B0     		sub	sp, sp, #28
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 40
  42 0004 0500     		movs	r5, r0
  43:Core/Src/stm32g0xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  43              		.loc 1 43 3 is_stmt 1 view .LVU2
  44:Core/Src/stm32g0xx_hal_timebase_tim.c ****   uint32_t              uwTimclock, uwAPB1Prescaler;
  44              		.loc 1 44 3 view .LVU3
  45:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  46:Core/Src/stm32g0xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue;
  45              		.loc 1 46 3 view .LVU4
  47:Core/Src/stm32g0xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  46              		.loc 1 47 3 view .LVU5
  48:Core/Src/stm32g0xx_hal_timebase_tim.c ****   HAL_StatusTypeDef     status = HAL_OK;
  47              		.loc 1 48 3 view .LVU6
  48              	.LVL1:
  49:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  50:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Enable TIM1 clock */
  51:Core/Src/stm32g0xx_hal_timebase_tim.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  49              		.loc 1 51 3 view .LVU7
  50              	.LBB2:
  51              		.loc 1 51 3 view .LVU8
  52              		.loc 1 51 3 view .LVU9
  53 0006 214B     		ldr	r3, .L8
  54 0008 1A6C     		ldr	r2, [r3, #64]
  55 000a 8021     		movs	r1, #128
  56 000c 0901     		lsls	r1, r1, #4
  57 000e 0A43     		orrs	r2, r1
  58 0010 1A64     		str	r2, [r3, #64]
  59              		.loc 1 51 3 view .LVU10
  60 0012 1B6C     		ldr	r3, [r3, #64]
  61 0014 0B40     		ands	r3, r1
  62 0016 0093     		str	r3, [sp]
  63              		.loc 1 51 3 view .LVU11
  64 0018 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccAhweWZ.s 			page 3


  65              	.LBE2:
  66              		.loc 1 51 3 view .LVU12
  52:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  53:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Get clock configuration */
  54:Core/Src/stm32g0xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  67              		.loc 1 54 3 view .LVU13
  68 001a 02AC     		add	r4, sp, #8
  69 001c 01A9     		add	r1, sp, #4
  70 001e 2000     		movs	r0, r4
  71              	.LVL2:
  72              		.loc 1 54 3 is_stmt 0 view .LVU14
  73 0020 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  74              	.LVL3:
  55:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  56:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Get APB1 prescaler */
  57:Core/Src/stm32g0xx_hal_timebase_tim.c ****   uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  75              		.loc 1 57 3 is_stmt 1 view .LVU15
  76              		.loc 1 57 19 is_stmt 0 view .LVU16
  77 0024 059B     		ldr	r3, [sp, #20]
  78              	.LVL4:
  58:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Compute TIM1 clock */
  59:Core/Src/stm32g0xx_hal_timebase_tim.c ****   if (uwAPB1Prescaler == RCC_HCLK_DIV1)
  79              		.loc 1 59 3 is_stmt 1 view .LVU17
  80              		.loc 1 59 6 is_stmt 0 view .LVU18
  81 0026 002B     		cmp	r3, #0
  82 0028 17D1     		bne	.L2
  60:Core/Src/stm32g0xx_hal_timebase_tim.c ****   {
  61:Core/Src/stm32g0xx_hal_timebase_tim.c ****     uwTimclock = HAL_RCC_GetPCLK1Freq();
  83              		.loc 1 61 5 is_stmt 1 view .LVU19
  84              		.loc 1 61 18 is_stmt 0 view .LVU20
  85 002a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  86              	.LVL5:
  87              	.L3:
  62:Core/Src/stm32g0xx_hal_timebase_tim.c ****   }
  63:Core/Src/stm32g0xx_hal_timebase_tim.c ****   else
  64:Core/Src/stm32g0xx_hal_timebase_tim.c ****   {
  65:Core/Src/stm32g0xx_hal_timebase_tim.c ****     uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  66:Core/Src/stm32g0xx_hal_timebase_tim.c ****   }
  67:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  68:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  69:Core/Src/stm32g0xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  88              		.loc 1 69 3 is_stmt 1 view .LVU21
  89              		.loc 1 69 46 is_stmt 0 view .LVU22
  90 002e 1849     		ldr	r1, .L8+4
  91 0030 FFF7FEFF 		bl	__aeabi_uidiv
  92              	.LVL6:
  93              		.loc 1 69 20 view .LVU23
  94 0034 421E     		subs	r2, r0, #1
  95              	.LVL7:
  70:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  71:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Initialize TIM1 */
  72:Core/Src/stm32g0xx_hal_timebase_tim.c ****   htim1.Instance = TIM1;
  96              		.loc 1 72 3 is_stmt 1 view .LVU24
  97              		.loc 1 72 18 is_stmt 0 view .LVU25
  98 0036 174B     		ldr	r3, .L8+8
  99 0038 1749     		ldr	r1, .L8+12
 100 003a 1800     		movs	r0, r3
ARM GAS  /tmp/ccAhweWZ.s 			page 4


 101 003c 1960     		str	r1, [r3]
  73:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  74:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  75:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  76:Core/Src/stm32g0xx_hal_timebase_tim.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  77:Core/Src/stm32g0xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  78:Core/Src/stm32g0xx_hal_timebase_tim.c ****   + ClockDivision = 0
  79:Core/Src/stm32g0xx_hal_timebase_tim.c ****   + Counter direction = Up
  80:Core/Src/stm32g0xx_hal_timebase_tim.c ****   */
  81:Core/Src/stm32g0xx_hal_timebase_tim.c ****   htim1.Init.Period = (1000000U / 1000U) - 1U;
 102              		.loc 1 81 3 is_stmt 1 view .LVU26
 103              		.loc 1 81 21 is_stmt 0 view .LVU27
 104 003e 174B     		ldr	r3, .L8+16
 105 0040 C360     		str	r3, [r0, #12]
  82:Core/Src/stm32g0xx_hal_timebase_tim.c ****   htim1.Init.Prescaler = uwPrescalerValue;
 106              		.loc 1 82 3 is_stmt 1 view .LVU28
 107              		.loc 1 82 24 is_stmt 0 view .LVU29
 108 0042 4260     		str	r2, [r0, #4]
  83:Core/Src/stm32g0xx_hal_timebase_tim.c ****   htim1.Init.ClockDivision = 0;
 109              		.loc 1 83 3 is_stmt 1 view .LVU30
 110              		.loc 1 83 28 is_stmt 0 view .LVU31
 111 0044 0023     		movs	r3, #0
 112 0046 0361     		str	r3, [r0, #16]
  84:Core/Src/stm32g0xx_hal_timebase_tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 113              		.loc 1 84 3 is_stmt 1 view .LVU32
 114              		.loc 1 84 26 is_stmt 0 view .LVU33
 115 0048 8360     		str	r3, [r0, #8]
  85:Core/Src/stm32g0xx_hal_timebase_tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 116              		.loc 1 85 3 is_stmt 1 view .LVU34
 117              		.loc 1 85 32 is_stmt 0 view .LVU35
 118 004a 8361     		str	r3, [r0, #24]
  86:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
  87:Core/Src/stm32g0xx_hal_timebase_tim.c ****   status = HAL_TIM_Base_Init(&htim1);
 119              		.loc 1 87 3 is_stmt 1 view .LVU36
 120              		.loc 1 87 12 is_stmt 0 view .LVU37
 121 004c FFF7FEFF 		bl	HAL_TIM_Base_Init
 122              	.LVL8:
 123              		.loc 1 87 12 view .LVU38
 124 0050 041E     		subs	r4, r0, #0
 125              	.LVL9:
  88:Core/Src/stm32g0xx_hal_timebase_tim.c ****   if (status == HAL_OK)
 126              		.loc 1 88 3 is_stmt 1 view .LVU39
 127              		.loc 1 88 6 is_stmt 0 view .LVU40
 128 0052 06D0     		beq	.L6
 129              	.LVL10:
 130              	.L4:
  89:Core/Src/stm32g0xx_hal_timebase_tim.c ****   {
  90:Core/Src/stm32g0xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  91:Core/Src/stm32g0xx_hal_timebase_tim.c ****     status = HAL_TIM_Base_Start_IT(&htim1);
  92:Core/Src/stm32g0xx_hal_timebase_tim.c ****     if (status == HAL_OK)
  93:Core/Src/stm32g0xx_hal_timebase_tim.c ****     {
  94:Core/Src/stm32g0xx_hal_timebase_tim.c ****     /* Enable the TIM1 global Interrupt */
  95:Core/Src/stm32g0xx_hal_timebase_tim.c ****         HAL_NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
  96:Core/Src/stm32g0xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
  97:Core/Src/stm32g0xx_hal_timebase_tim.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  98:Core/Src/stm32g0xx_hal_timebase_tim.c ****       {
  99:Core/Src/stm32g0xx_hal_timebase_tim.c ****         /* Configure the TIM IRQ priority */
ARM GAS  /tmp/ccAhweWZ.s 			page 5


 100:Core/Src/stm32g0xx_hal_timebase_tim.c ****         HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, TickPriority, 0U);
 101:Core/Src/stm32g0xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 102:Core/Src/stm32g0xx_hal_timebase_tim.c ****       }
 103:Core/Src/stm32g0xx_hal_timebase_tim.c ****       else
 104:Core/Src/stm32g0xx_hal_timebase_tim.c ****       {
 105:Core/Src/stm32g0xx_hal_timebase_tim.c ****         status = HAL_ERROR;
 106:Core/Src/stm32g0xx_hal_timebase_tim.c ****       }
 107:Core/Src/stm32g0xx_hal_timebase_tim.c ****     }
 108:Core/Src/stm32g0xx_hal_timebase_tim.c ****   }
 109:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
 110:Core/Src/stm32g0xx_hal_timebase_tim.c ****  /* Return function status */
 111:Core/Src/stm32g0xx_hal_timebase_tim.c ****   return status;
 131              		.loc 1 111 3 is_stmt 1 view .LVU41
 112:Core/Src/stm32g0xx_hal_timebase_tim.c **** }
 132              		.loc 1 112 1 is_stmt 0 view .LVU42
 133 0054 2000     		movs	r0, r4
 134 0056 07B0     		add	sp, sp, #28
 135              		@ sp needed
 136              	.LVL11:
 137              	.LVL12:
 138              		.loc 1 112 1 view .LVU43
 139 0058 30BD     		pop	{r4, r5, pc}
 140              	.LVL13:
 141              	.L2:
  65:Core/Src/stm32g0xx_hal_timebase_tim.c ****   }
 142              		.loc 1 65 5 is_stmt 1 view .LVU44
  65:Core/Src/stm32g0xx_hal_timebase_tim.c ****   }
 143              		.loc 1 65 24 is_stmt 0 view .LVU45
 144 005a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 145              	.LVL14:
  65:Core/Src/stm32g0xx_hal_timebase_tim.c ****   }
 146              		.loc 1 65 16 discriminator 1 view .LVU46
 147 005e 4000     		lsls	r0, r0, #1
 148 0060 E5E7     		b	.L3
 149              	.LVL15:
 150              	.L6:
  91:Core/Src/stm32g0xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 151              		.loc 1 91 5 is_stmt 1 view .LVU47
  91:Core/Src/stm32g0xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 152              		.loc 1 91 14 is_stmt 0 view .LVU48
 153 0062 0C48     		ldr	r0, .L8+8
 154              	.LVL16:
  91:Core/Src/stm32g0xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 155              		.loc 1 91 14 view .LVU49
 156 0064 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 157              	.LVL17:
 158 0068 041E     		subs	r4, r0, #0
 159              	.LVL18:
  92:Core/Src/stm32g0xx_hal_timebase_tim.c ****     {
 160              		.loc 1 92 5 is_stmt 1 view .LVU50
  92:Core/Src/stm32g0xx_hal_timebase_tim.c ****     {
 161              		.loc 1 92 8 is_stmt 0 view .LVU51
 162 006a F3D1     		bne	.L4
  95:Core/Src/stm32g0xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
 163              		.loc 1 95 9 is_stmt 1 view .LVU52
 164 006c 0D20     		movs	r0, #13
 165              	.LVL19:
ARM GAS  /tmp/ccAhweWZ.s 			page 6


  95:Core/Src/stm32g0xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
 166              		.loc 1 95 9 is_stmt 0 view .LVU53
 167 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 168              	.LVL20:
  97:Core/Src/stm32g0xx_hal_timebase_tim.c ****       {
 169              		.loc 1 97 7 is_stmt 1 view .LVU54
  97:Core/Src/stm32g0xx_hal_timebase_tim.c ****       {
 170              		.loc 1 97 10 is_stmt 0 view .LVU55
 171 0072 032D     		cmp	r5, #3
 172 0074 01D9     		bls	.L7
 105:Core/Src/stm32g0xx_hal_timebase_tim.c ****       }
 173              		.loc 1 105 16 view .LVU56
 174 0076 0124     		movs	r4, #1
 175              	.LVL21:
 105:Core/Src/stm32g0xx_hal_timebase_tim.c ****       }
 176              		.loc 1 105 16 view .LVU57
 177 0078 ECE7     		b	.L4
 178              	.LVL22:
 179              	.L7:
 100:Core/Src/stm32g0xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 180              		.loc 1 100 9 is_stmt 1 view .LVU58
 181 007a 0022     		movs	r2, #0
 182 007c 2900     		movs	r1, r5
 183 007e 0D20     		movs	r0, #13
 184 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 185              	.LVL23:
 101:Core/Src/stm32g0xx_hal_timebase_tim.c ****       }
 186              		.loc 1 101 9 view .LVU59
 101:Core/Src/stm32g0xx_hal_timebase_tim.c ****       }
 187              		.loc 1 101 20 is_stmt 0 view .LVU60
 188 0084 064B     		ldr	r3, .L8+20
 189 0086 1D60     		str	r5, [r3]
 190 0088 E4E7     		b	.L4
 191              	.L9:
 192 008a C046     		.align	2
 193              	.L8:
 194 008c 00100240 		.word	1073876992
 195 0090 40420F00 		.word	1000000
 196 0094 00000000 		.word	htim1
 197 0098 002C0140 		.word	1073818624
 198 009c E7030000 		.word	999
 199 00a0 00000000 		.word	uwTickPrio
 200              		.cfi_endproc
 201              	.LFE496:
 203              		.section	.text.HAL_SuspendTick,"ax",%progbits
 204              		.align	1
 205              		.global	HAL_SuspendTick
 206              		.syntax unified
 207              		.code	16
 208              		.thumb_func
 210              	HAL_SuspendTick:
 211              	.LFB497:
 113:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
 114:Core/Src/stm32g0xx_hal_timebase_tim.c **** /**
 115:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 116:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
 117:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @param  None
ARM GAS  /tmp/ccAhweWZ.s 			page 7


 118:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @retval None
 119:Core/Src/stm32g0xx_hal_timebase_tim.c ****   */
 120:Core/Src/stm32g0xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 121:Core/Src/stm32g0xx_hal_timebase_tim.c **** {
 212              		.loc 1 121 1 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 122:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Disable TIM1 update Interrupt */
 123:Core/Src/stm32g0xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);
 217              		.loc 1 123 3 view .LVU62
 218 0000 034B     		ldr	r3, .L11
 219 0002 1A68     		ldr	r2, [r3]
 220 0004 D368     		ldr	r3, [r2, #12]
 221 0006 0121     		movs	r1, #1
 222 0008 8B43     		bics	r3, r1
 223 000a D360     		str	r3, [r2, #12]
 124:Core/Src/stm32g0xx_hal_timebase_tim.c **** }
 224              		.loc 1 124 1 is_stmt 0 view .LVU63
 225              		@ sp needed
 226 000c 7047     		bx	lr
 227              	.L12:
 228 000e C046     		.align	2
 229              	.L11:
 230 0010 00000000 		.word	htim1
 231              		.cfi_endproc
 232              	.LFE497:
 234              		.section	.text.HAL_ResumeTick,"ax",%progbits
 235              		.align	1
 236              		.global	HAL_ResumeTick
 237              		.syntax unified
 238              		.code	16
 239              		.thumb_func
 241              	HAL_ResumeTick:
 242              	.LFB498:
 125:Core/Src/stm32g0xx_hal_timebase_tim.c **** 
 126:Core/Src/stm32g0xx_hal_timebase_tim.c **** /**
 127:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 128:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 129:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @param  None
 130:Core/Src/stm32g0xx_hal_timebase_tim.c ****   * @retval None
 131:Core/Src/stm32g0xx_hal_timebase_tim.c ****   */
 132:Core/Src/stm32g0xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 133:Core/Src/stm32g0xx_hal_timebase_tim.c **** {
 243              		.loc 1 133 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 134:Core/Src/stm32g0xx_hal_timebase_tim.c ****   /* Enable TIM1 Update interrupt */
 135:Core/Src/stm32g0xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 248              		.loc 1 135 3 view .LVU65
 249 0000 034B     		ldr	r3, .L14
 250 0002 1A68     		ldr	r2, [r3]
 251 0004 D368     		ldr	r3, [r2, #12]
 252 0006 0121     		movs	r1, #1
ARM GAS  /tmp/ccAhweWZ.s 			page 8


 253 0008 0B43     		orrs	r3, r1
 254 000a D360     		str	r3, [r2, #12]
 136:Core/Src/stm32g0xx_hal_timebase_tim.c **** }
 255              		.loc 1 136 1 is_stmt 0 view .LVU66
 256              		@ sp needed
 257 000c 7047     		bx	lr
 258              	.L15:
 259 000e C046     		.align	2
 260              	.L14:
 261 0010 00000000 		.word	htim1
 262              		.cfi_endproc
 263              	.LFE498:
 265              		.global	htim1
 266              		.section	.bss.htim1,"aw",%nobits
 267              		.align	2
 270              	htim1:
 271 0000 00000000 		.space	76
 271      00000000 
 271      00000000 
 271      00000000 
 271      00000000 
 272              		.text
 273              	.Letext0:
 274              		.file 2 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0b1xx.h"
 275              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 276              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 277              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 278              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 279              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 280              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 281              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 282              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_cortex.h"
 283              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  /tmp/ccAhweWZ.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_timebase_tim.c
     /tmp/ccAhweWZ.s:19     .text.HAL_InitTick:00000000 $t
     /tmp/ccAhweWZ.s:25     .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccAhweWZ.s:194    .text.HAL_InitTick:0000008c $d
     /tmp/ccAhweWZ.s:270    .bss.htim1:00000000 htim1
     /tmp/ccAhweWZ.s:204    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccAhweWZ.s:210    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccAhweWZ.s:230    .text.HAL_SuspendTick:00000010 $d
     /tmp/ccAhweWZ.s:235    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccAhweWZ.s:241    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccAhweWZ.s:261    .text.HAL_ResumeTick:00000010 $d
     /tmp/ccAhweWZ.s:267    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
__aeabi_uidiv
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
uwTickPrio
