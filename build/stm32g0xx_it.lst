ARM GAS  /tmp/ccggCM8E.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32g0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB496:
   1:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32g0xx_it.c **** /**
   3:Core/Src/stm32g0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32g0xx_it.c ****   * @file    stm32g0xx_it.c
   5:Core/Src/stm32g0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32g0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32g0xx_it.c ****   * @attention
   8:Core/Src/stm32g0xx_it.c ****   *
   9:Core/Src/stm32g0xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32g0xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32g0xx_it.c ****   *
  12:Core/Src/stm32g0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32g0xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32g0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32g0xx_it.c ****   *
  16:Core/Src/stm32g0xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32g0xx_it.c ****   */
  18:Core/Src/stm32g0xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32g0xx_it.c **** 
  20:Core/Src/stm32g0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32g0xx_it.c **** #include "main.h"
  22:Core/Src/stm32g0xx_it.c **** #include "stm32g0xx_it.h"
  23:Core/Src/stm32g0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32g0xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32g0xx_it.c **** 
  27:Core/Src/stm32g0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32g0xx_it.c **** 
  30:Core/Src/stm32g0xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32g0xx_it.c **** 
  32:Core/Src/stm32g0xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccggCM8E.s 			page 2


  33:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32g0xx_it.c **** 
  35:Core/Src/stm32g0xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32g0xx_it.c **** 
  37:Core/Src/stm32g0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32g0xx_it.c **** 
  40:Core/Src/stm32g0xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32g0xx_it.c **** 
  42:Core/Src/stm32g0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32g0xx_it.c **** 
  45:Core/Src/stm32g0xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32g0xx_it.c **** 
  47:Core/Src/stm32g0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32g0xx_it.c **** 
  50:Core/Src/stm32g0xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32g0xx_it.c **** 
  52:Core/Src/stm32g0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32g0xx_it.c **** 
  55:Core/Src/stm32g0xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32g0xx_it.c **** 
  57:Core/Src/stm32g0xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32g0xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_DRD_FS;
  59:Core/Src/stm32g0xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Core/Src/stm32g0xx_it.c **** extern FDCAN_HandleTypeDef hfdcan1;
  61:Core/Src/stm32g0xx_it.c **** extern FDCAN_HandleTypeDef hfdcan2;
  62:Core/Src/stm32g0xx_it.c **** extern TIM_HandleTypeDef htim1;
  63:Core/Src/stm32g0xx_it.c **** 
  64:Core/Src/stm32g0xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32g0xx_it.c **** 
  66:Core/Src/stm32g0xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32g0xx_it.c **** 
  68:Core/Src/stm32g0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32g0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32g0xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32g0xx_it.c **** /**
  72:Core/Src/stm32g0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32g0xx_it.c ****   */
  74:Core/Src/stm32g0xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32g0xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  76:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32g0xx_it.c **** 
  78:Core/Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32g0xx_it.c ****    while (1)
  34              		.loc 1 80 4 view .LVU1
  81:Core/Src/stm32g0xx_it.c ****   {
ARM GAS  /tmp/ccggCM8E.s 			page 3


  82:Core/Src/stm32g0xx_it.c ****   }
  35              		.loc 1 82 3 view .LVU2
  80:Core/Src/stm32g0xx_it.c ****   {
  36              		.loc 1 80 10 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE496:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB497:
  83:Core/Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32g0xx_it.c **** }
  85:Core/Src/stm32g0xx_it.c **** 
  86:Core/Src/stm32g0xx_it.c **** /**
  87:Core/Src/stm32g0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32g0xx_it.c ****   */
  89:Core/Src/stm32g0xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32g0xx_it.c **** {
  50              		.loc 1 90 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  91:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32g0xx_it.c **** 
  93:Core/Src/stm32g0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32g0xx_it.c ****   while (1)
  57              		.loc 1 94 3 view .LVU5
  95:Core/Src/stm32g0xx_it.c ****   {
  96:Core/Src/stm32g0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32g0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32g0xx_it.c ****   }
  58              		.loc 1 98 3 view .LVU6
  94:Core/Src/stm32g0xx_it.c ****   {
  59              		.loc 1 94 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE497:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB498:
  99:Core/Src/stm32g0xx_it.c **** }
 100:Core/Src/stm32g0xx_it.c **** 
 101:Core/Src/stm32g0xx_it.c **** /**
 102:Core/Src/stm32g0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccggCM8E.s 			page 4


 103:Core/Src/stm32g0xx_it.c ****   */
 104:Core/Src/stm32g0xx_it.c **** void SVC_Handler(void)
 105:Core/Src/stm32g0xx_it.c **** {
  73              		.loc 1 105 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 106:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 107:Core/Src/stm32g0xx_it.c **** 
 108:Core/Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 109:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 110:Core/Src/stm32g0xx_it.c **** 
 111:Core/Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 112:Core/Src/stm32g0xx_it.c **** }
  78              		.loc 1 112 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE498:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB499:
 113:Core/Src/stm32g0xx_it.c **** 
 114:Core/Src/stm32g0xx_it.c **** /**
 115:Core/Src/stm32g0xx_it.c ****   * @brief This function handles Pendable request for system service.
 116:Core/Src/stm32g0xx_it.c ****   */
 117:Core/Src/stm32g0xx_it.c **** void PendSV_Handler(void)
 118:Core/Src/stm32g0xx_it.c **** {
  93              		.loc 1 118 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 119:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 120:Core/Src/stm32g0xx_it.c **** 
 121:Core/Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 122:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 123:Core/Src/stm32g0xx_it.c **** 
 124:Core/Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 125:Core/Src/stm32g0xx_it.c **** }
  98              		.loc 1 125 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE499:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
ARM GAS  /tmp/ccggCM8E.s 			page 5


 111              	SysTick_Handler:
 112              	.LFB500:
 126:Core/Src/stm32g0xx_it.c **** 
 127:Core/Src/stm32g0xx_it.c **** /**
 128:Core/Src/stm32g0xx_it.c ****   * @brief This function handles System tick timer.
 129:Core/Src/stm32g0xx_it.c ****   */
 130:Core/Src/stm32g0xx_it.c **** void SysTick_Handler(void)
 131:Core/Src/stm32g0xx_it.c **** {
 113              		.loc 1 131 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 132:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 133:Core/Src/stm32g0xx_it.c **** 
 134:Core/Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 135:Core/Src/stm32g0xx_it.c **** 
 136:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 137:Core/Src/stm32g0xx_it.c **** 
 138:Core/Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 139:Core/Src/stm32g0xx_it.c **** }
 118              		.loc 1 139 1 view .LVU13
 119              		@ sp needed
 120 0000 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE500:
 124              		.section	.text.USB_UCPD1_2_IRQHandler,"ax",%progbits
 125              		.align	1
 126              		.global	USB_UCPD1_2_IRQHandler
 127              		.syntax unified
 128              		.code	16
 129              		.thumb_func
 131              	USB_UCPD1_2_IRQHandler:
 132              	.LFB501:
 140:Core/Src/stm32g0xx_it.c **** 
 141:Core/Src/stm32g0xx_it.c **** /******************************************************************************/
 142:Core/Src/stm32g0xx_it.c **** /* STM32G0xx Peripheral Interrupt Handlers                                    */
 143:Core/Src/stm32g0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 144:Core/Src/stm32g0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 145:Core/Src/stm32g0xx_it.c **** /* please refer to the startup file (startup_stm32g0xx.s).                    */
 146:Core/Src/stm32g0xx_it.c **** /******************************************************************************/
 147:Core/Src/stm32g0xx_it.c **** 
 148:Core/Src/stm32g0xx_it.c **** /**
 149:Core/Src/stm32g0xx_it.c ****   * @brief This function handles USB, UCPD1 and UCPD2 global interrupts.
 150:Core/Src/stm32g0xx_it.c ****   */
 151:Core/Src/stm32g0xx_it.c **** void USB_UCPD1_2_IRQHandler(void)
 152:Core/Src/stm32g0xx_it.c **** {
 133              		.loc 1 152 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 10B5     		push	{r4, lr}
 138              	.LCFI0:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
 153:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USB_UCPD1_2_IRQn 0 */
ARM GAS  /tmp/ccggCM8E.s 			page 6


 154:Core/Src/stm32g0xx_it.c **** 
 155:Core/Src/stm32g0xx_it.c ****   /* USER CODE END USB_UCPD1_2_IRQn 0 */
 156:Core/Src/stm32g0xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_DRD_FS);
 142              		.loc 1 156 3 view .LVU15
 143 0002 0248     		ldr	r0, .L9
 144 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 145              	.LVL0:
 157:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USB_UCPD1_2_IRQn 1 */
 158:Core/Src/stm32g0xx_it.c **** 
 159:Core/Src/stm32g0xx_it.c ****   /* USER CODE END USB_UCPD1_2_IRQn 1 */
 160:Core/Src/stm32g0xx_it.c **** }
 146              		.loc 1 160 1 is_stmt 0 view .LVU16
 147              		@ sp needed
 148 0008 10BD     		pop	{r4, pc}
 149              	.L10:
 150 000a C046     		.align	2
 151              	.L9:
 152 000c 00000000 		.word	hpcd_USB_DRD_FS
 153              		.cfi_endproc
 154              	.LFE501:
 156              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 157              		.align	1
 158              		.global	DMA1_Channel1_IRQHandler
 159              		.syntax unified
 160              		.code	16
 161              		.thumb_func
 163              	DMA1_Channel1_IRQHandler:
 164              	.LFB502:
 161:Core/Src/stm32g0xx_it.c **** 
 162:Core/Src/stm32g0xx_it.c **** /**
 163:Core/Src/stm32g0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
 164:Core/Src/stm32g0xx_it.c ****   */
 165:Core/Src/stm32g0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 166:Core/Src/stm32g0xx_it.c **** {
 165              		.loc 1 166 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 10B5     		push	{r4, lr}
 170              	.LCFI1:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 167:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 168:Core/Src/stm32g0xx_it.c **** 
 169:Core/Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 170:Core/Src/stm32g0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 174              		.loc 1 170 3 view .LVU18
 175 0002 0248     		ldr	r0, .L12
 176 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 177              	.LVL1:
 171:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 172:Core/Src/stm32g0xx_it.c **** 
 173:Core/Src/stm32g0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 174:Core/Src/stm32g0xx_it.c **** }
 178              		.loc 1 174 1 is_stmt 0 view .LVU19
 179              		@ sp needed
ARM GAS  /tmp/ccggCM8E.s 			page 7


 180 0008 10BD     		pop	{r4, pc}
 181              	.L13:
 182 000a C046     		.align	2
 183              	.L12:
 184 000c 00000000 		.word	hdma_adc1
 185              		.cfi_endproc
 186              	.LFE502:
 188              		.section	.text.TIM1_BRK_UP_TRG_COM_IRQHandler,"ax",%progbits
 189              		.align	1
 190              		.global	TIM1_BRK_UP_TRG_COM_IRQHandler
 191              		.syntax unified
 192              		.code	16
 193              		.thumb_func
 195              	TIM1_BRK_UP_TRG_COM_IRQHandler:
 196              	.LFB503:
 175:Core/Src/stm32g0xx_it.c **** 
 176:Core/Src/stm32g0xx_it.c **** /**
 177:Core/Src/stm32g0xx_it.c ****   * @brief This function handles TIM1 break, update, trigger and commutation interrupts.
 178:Core/Src/stm32g0xx_it.c ****   */
 179:Core/Src/stm32g0xx_it.c **** void TIM1_BRK_UP_TRG_COM_IRQHandler(void)
 180:Core/Src/stm32g0xx_it.c **** {
 197              		.loc 1 180 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 10B5     		push	{r4, lr}
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 181:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_UP_TRG_COM_IRQn 0 */
 182:Core/Src/stm32g0xx_it.c **** 
 183:Core/Src/stm32g0xx_it.c ****   /* USER CODE END TIM1_BRK_UP_TRG_COM_IRQn 0 */
 184:Core/Src/stm32g0xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 206              		.loc 1 184 3 view .LVU21
 207 0002 0248     		ldr	r0, .L15
 208 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 209              	.LVL2:
 185:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_UP_TRG_COM_IRQn 1 */
 186:Core/Src/stm32g0xx_it.c **** 
 187:Core/Src/stm32g0xx_it.c ****   /* USER CODE END TIM1_BRK_UP_TRG_COM_IRQn 1 */
 188:Core/Src/stm32g0xx_it.c **** }
 210              		.loc 1 188 1 is_stmt 0 view .LVU22
 211              		@ sp needed
 212 0008 10BD     		pop	{r4, pc}
 213              	.L16:
 214 000a C046     		.align	2
 215              	.L15:
 216 000c 00000000 		.word	htim1
 217              		.cfi_endproc
 218              	.LFE503:
 220              		.section	.text.TIM16_FDCAN_IT0_IRQHandler,"ax",%progbits
 221              		.align	1
 222              		.global	TIM16_FDCAN_IT0_IRQHandler
 223              		.syntax unified
 224              		.code	16
 225              		.thumb_func
ARM GAS  /tmp/ccggCM8E.s 			page 8


 227              	TIM16_FDCAN_IT0_IRQHandler:
 228              	.LFB504:
 189:Core/Src/stm32g0xx_it.c **** 
 190:Core/Src/stm32g0xx_it.c **** /**
 191:Core/Src/stm32g0xx_it.c ****   * @brief This function handles TIM16, FDCAN1_IT0 and FDCAN2_IT0 Interrupt.
 192:Core/Src/stm32g0xx_it.c ****   */
 193:Core/Src/stm32g0xx_it.c **** void TIM16_FDCAN_IT0_IRQHandler(void)
 194:Core/Src/stm32g0xx_it.c **** {
 229              		.loc 1 194 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 10B5     		push	{r4, lr}
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 4, -8
 237              		.cfi_offset 14, -4
 195:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM16_FDCAN_IT0_IRQn 0 */
 196:Core/Src/stm32g0xx_it.c **** 
 197:Core/Src/stm32g0xx_it.c ****   /* USER CODE END TIM16_FDCAN_IT0_IRQn 0 */
 198:Core/Src/stm32g0xx_it.c ****   HAL_FDCAN_IRQHandler(&hfdcan1);
 238              		.loc 1 198 3 view .LVU24
 239 0002 0348     		ldr	r0, .L18
 240 0004 FFF7FEFF 		bl	HAL_FDCAN_IRQHandler
 241              	.LVL3:
 199:Core/Src/stm32g0xx_it.c ****   HAL_FDCAN_IRQHandler(&hfdcan2);
 242              		.loc 1 199 3 view .LVU25
 243 0008 0248     		ldr	r0, .L18+4
 244 000a FFF7FEFF 		bl	HAL_FDCAN_IRQHandler
 245              	.LVL4:
 200:Core/Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM16_FDCAN_IT0_IRQn 1 */
 201:Core/Src/stm32g0xx_it.c **** 
 202:Core/Src/stm32g0xx_it.c ****   /* USER CODE END TIM16_FDCAN_IT0_IRQn 1 */
 203:Core/Src/stm32g0xx_it.c **** }
 246              		.loc 1 203 1 is_stmt 0 view .LVU26
 247              		@ sp needed
 248 000e 10BD     		pop	{r4, pc}
 249              	.L19:
 250              		.align	2
 251              	.L18:
 252 0010 00000000 		.word	hfdcan1
 253 0014 00000000 		.word	hfdcan2
 254              		.cfi_endproc
 255              	.LFE504:
 257              		.text
 258              	.Letext0:
 259              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 260              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 261              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0b1xx.h"
 262              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 263              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 264              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 265              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_fdcan.h"
 266              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usb.h"
 267              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pcd.h"
 268              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 269              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  /tmp/ccggCM8E.s 			page 9


ARM GAS  /tmp/ccggCM8E.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_it.c
     /tmp/ccggCM8E.s:19     .text.NMI_Handler:00000000 $t
     /tmp/ccggCM8E.s:25     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccggCM8E.s:42     .text.HardFault_Handler:00000000 $t
     /tmp/ccggCM8E.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccggCM8E.s:65     .text.SVC_Handler:00000000 $t
     /tmp/ccggCM8E.s:71     .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccggCM8E.s:85     .text.PendSV_Handler:00000000 $t
     /tmp/ccggCM8E.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccggCM8E.s:105    .text.SysTick_Handler:00000000 $t
     /tmp/ccggCM8E.s:111    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccggCM8E.s:125    .text.USB_UCPD1_2_IRQHandler:00000000 $t
     /tmp/ccggCM8E.s:131    .text.USB_UCPD1_2_IRQHandler:00000000 USB_UCPD1_2_IRQHandler
     /tmp/ccggCM8E.s:152    .text.USB_UCPD1_2_IRQHandler:0000000c $d
     /tmp/ccggCM8E.s:157    .text.DMA1_Channel1_IRQHandler:00000000 $t
     /tmp/ccggCM8E.s:163    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
     /tmp/ccggCM8E.s:184    .text.DMA1_Channel1_IRQHandler:0000000c $d
     /tmp/ccggCM8E.s:189    .text.TIM1_BRK_UP_TRG_COM_IRQHandler:00000000 $t
     /tmp/ccggCM8E.s:195    .text.TIM1_BRK_UP_TRG_COM_IRQHandler:00000000 TIM1_BRK_UP_TRG_COM_IRQHandler
     /tmp/ccggCM8E.s:216    .text.TIM1_BRK_UP_TRG_COM_IRQHandler:0000000c $d
     /tmp/ccggCM8E.s:221    .text.TIM16_FDCAN_IT0_IRQHandler:00000000 $t
     /tmp/ccggCM8E.s:227    .text.TIM16_FDCAN_IT0_IRQHandler:00000000 TIM16_FDCAN_IT0_IRQHandler
     /tmp/ccggCM8E.s:252    .text.TIM16_FDCAN_IT0_IRQHandler:00000010 $d

UNDEFINED SYMBOLS
HAL_PCD_IRQHandler
hpcd_USB_DRD_FS
HAL_DMA_IRQHandler
hdma_adc1
HAL_TIM_IRQHandler
htim1
HAL_FDCAN_IRQHandler
hfdcan1
hfdcan2
