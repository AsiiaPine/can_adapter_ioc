ARM GAS  /tmp/cc9Ss9bi.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/adc.c"
  18              		.section	.text.MX_ADC1_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_ADC1_Init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	MX_ADC1_Init:
  26              	.LFB496:
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
ARM GAS  /tmp/cc9Ss9bi.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 24
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  38              		.loc 1 38 3 view .LVU1
  39              		.loc 1 38 26 is_stmt 0 view .LVU2
  40 0004 0C22     		movs	r2, #12
  41 0006 0021     		movs	r1, #0
  42 0008 01A8     		add	r0, sp, #4
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  45:Core/Src/adc.c ****   */
  46:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  45              		.loc 1 46 3 is_stmt 1 view .LVU3
  46              		.loc 1 46 18 is_stmt 0 view .LVU4
  47 000e 3548     		ldr	r0, .L14
  48 0010 354B     		ldr	r3, .L14+4
  49 0012 0360     		str	r3, [r0]
  47:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  50              		.loc 1 47 3 is_stmt 1 view .LVU5
  51              		.loc 1 47 29 is_stmt 0 view .LVU6
  52 0014 8023     		movs	r3, #128
  53 0016 DB05     		lsls	r3, r3, #23
  54 0018 4360     		str	r3, [r0, #4]
  48:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  55              		.loc 1 48 3 is_stmt 1 view .LVU7
  56              		.loc 1 48 25 is_stmt 0 view .LVU8
  57 001a 0023     		movs	r3, #0
  58 001c 8360     		str	r3, [r0, #8]
  49:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  59              		.loc 1 49 3 is_stmt 1 view .LVU9
  60              		.loc 1 49 24 is_stmt 0 view .LVU10
  61 001e C360     		str	r3, [r0, #12]
  50:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  62              		.loc 1 50 3 is_stmt 1 view .LVU11
  63              		.loc 1 50 27 is_stmt 0 view .LVU12
  64 0020 8022     		movs	r2, #128
  65 0022 9203     		lsls	r2, r2, #14
ARM GAS  /tmp/cc9Ss9bi.s 			page 3


  66 0024 0261     		str	r2, [r0, #16]
  51:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  67              		.loc 1 51 3 is_stmt 1 view .LVU13
  68              		.loc 1 51 27 is_stmt 0 view .LVU14
  69 0026 0422     		movs	r2, #4
  70 0028 4261     		str	r2, [r0, #20]
  52:Core/Src/adc.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  71              		.loc 1 52 3 is_stmt 1 view .LVU15
  72              		.loc 1 52 31 is_stmt 0 view .LVU16
  73 002a 0376     		strb	r3, [r0, #24]
  53:Core/Src/adc.c ****   hadc1.Init.LowPowerAutoPowerOff = DISABLE;
  74              		.loc 1 53 3 is_stmt 1 view .LVU17
  75              		.loc 1 53 35 is_stmt 0 view .LVU18
  76 002c 4376     		strb	r3, [r0, #25]
  54:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
  77              		.loc 1 54 3 is_stmt 1 view .LVU19
  78              		.loc 1 54 33 is_stmt 0 view .LVU20
  79 002e 8376     		strb	r3, [r0, #26]
  55:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 5;
  80              		.loc 1 55 3 is_stmt 1 view .LVU21
  81              		.loc 1 55 30 is_stmt 0 view .LVU22
  82 0030 0132     		adds	r2, r2, #1
  83 0032 C261     		str	r2, [r0, #28]
  56:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  84              		.loc 1 56 3 is_stmt 1 view .LVU23
  85              		.loc 1 56 36 is_stmt 0 view .LVU24
  86 0034 1B32     		adds	r2, r2, #27
  87 0036 8354     		strb	r3, [r0, r2]
  57:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  88              		.loc 1 57 3 is_stmt 1 view .LVU25
  89              		.loc 1 57 31 is_stmt 0 view .LVU26
  90 0038 4362     		str	r3, [r0, #36]
  58:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  91              		.loc 1 58 3 is_stmt 1 view .LVU27
  92              		.loc 1 58 35 is_stmt 0 view .LVU28
  93 003a 8362     		str	r3, [r0, #40]
  59:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  94              		.loc 1 59 3 is_stmt 1 view .LVU29
  95              		.loc 1 59 36 is_stmt 0 view .LVU30
  96 003c 0C32     		adds	r2, r2, #12
  97 003e 8354     		strb	r3, [r0, r2]
  60:Core/Src/adc.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  98              		.loc 1 60 3 is_stmt 1 view .LVU31
  99              		.loc 1 60 22 is_stmt 0 view .LVU32
 100 0040 0363     		str	r3, [r0, #48]
  61:Core/Src/adc.c ****   hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_79CYCLES_5;
 101              		.loc 1 61 3 is_stmt 1 view .LVU33
 102              		.loc 1 61 34 is_stmt 0 view .LVU34
 103 0042 263A     		subs	r2, r2, #38
 104 0044 4263     		str	r2, [r0, #52]
  62:Core/Src/adc.c ****   hadc1.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_79CYCLES_5;
 105              		.loc 1 62 3 is_stmt 1 view .LVU35
 106              		.loc 1 62 34 is_stmt 0 view .LVU36
 107 0046 8263     		str	r2, [r0, #56]
  63:Core/Src/adc.c ****   hadc1.Init.OversamplingMode = DISABLE;
 108              		.loc 1 63 3 is_stmt 1 view .LVU37
 109              		.loc 1 63 31 is_stmt 0 view .LVU38
ARM GAS  /tmp/cc9Ss9bi.s 			page 4


 110 0048 3632     		adds	r2, r2, #54
 111 004a 8354     		strb	r3, [r0, r2]
  64:Core/Src/adc.c ****   hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 112              		.loc 1 64 3 is_stmt 1 view .LVU39
 113              		.loc 1 64 35 is_stmt 0 view .LVU40
 114 004c C364     		str	r3, [r0, #76]
  65:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 115              		.loc 1 65 3 is_stmt 1 view .LVU41
 116              		.loc 1 65 7 is_stmt 0 view .LVU42
 117 004e FFF7FEFF 		bl	HAL_ADC_Init
 118              	.LVL1:
 119              		.loc 1 65 6 discriminator 1 view .LVU43
 120 0052 0028     		cmp	r0, #0
 121 0054 34D1     		bne	.L8
 122              	.L2:
  66:Core/Src/adc.c ****   {
  67:Core/Src/adc.c ****     Error_Handler();
  68:Core/Src/adc.c ****   }
  69:Core/Src/adc.c **** 
  70:Core/Src/adc.c ****   /** Configure Regular Channel
  71:Core/Src/adc.c ****   */
  72:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
 123              		.loc 1 72 3 is_stmt 1 view .LVU44
 124              		.loc 1 72 19 is_stmt 0 view .LVU45
 125 0056 01A9     		add	r1, sp, #4
 126 0058 0123     		movs	r3, #1
 127 005a 0193     		str	r3, [sp, #4]
  73:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 128              		.loc 1 73 3 is_stmt 1 view .LVU46
 129              		.loc 1 73 16 is_stmt 0 view .LVU47
 130 005c 0023     		movs	r3, #0
 131 005e 4B60     		str	r3, [r1, #4]
  74:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLINGTIME_COMMON_1;
 132              		.loc 1 74 3 is_stmt 1 view .LVU48
 133              		.loc 1 74 24 is_stmt 0 view .LVU49
 134 0060 8B60     		str	r3, [r1, #8]
  75:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 135              		.loc 1 75 3 is_stmt 1 view .LVU50
 136              		.loc 1 75 7 is_stmt 0 view .LVU51
 137 0062 2048     		ldr	r0, .L14
 138 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 139              	.LVL2:
 140              		.loc 1 75 6 discriminator 1 view .LVU52
 141 0068 0028     		cmp	r0, #0
 142 006a 2CD1     		bne	.L9
 143              	.L3:
  76:Core/Src/adc.c ****   {
  77:Core/Src/adc.c ****     Error_Handler();
  78:Core/Src/adc.c ****   }
  79:Core/Src/adc.c **** 
  80:Core/Src/adc.c ****   /** Configure Regular Channel
  81:Core/Src/adc.c ****   */
  82:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 144              		.loc 1 82 3 is_stmt 1 view .LVU53
 145              		.loc 1 82 19 is_stmt 0 view .LVU54
 146 006c 01A9     		add	r1, sp, #4
 147 006e 1F4B     		ldr	r3, .L14+8
ARM GAS  /tmp/cc9Ss9bi.s 			page 5


 148 0070 0193     		str	r3, [sp, #4]
  83:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 149              		.loc 1 83 3 is_stmt 1 view .LVU55
 150              		.loc 1 83 16 is_stmt 0 view .LVU56
 151 0072 0423     		movs	r3, #4
 152 0074 4B60     		str	r3, [r1, #4]
  84:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 153              		.loc 1 84 3 is_stmt 1 view .LVU57
 154              		.loc 1 84 7 is_stmt 0 view .LVU58
 155 0076 1B48     		ldr	r0, .L14
 156 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 157              	.LVL3:
 158              		.loc 1 84 6 discriminator 1 view .LVU59
 159 007c 0028     		cmp	r0, #0
 160 007e 25D1     		bne	.L10
 161              	.L4:
  85:Core/Src/adc.c ****   {
  86:Core/Src/adc.c ****     Error_Handler();
  87:Core/Src/adc.c ****   }
  88:Core/Src/adc.c **** 
  89:Core/Src/adc.c ****   /** Configure Regular Channel
  90:Core/Src/adc.c ****   */
  91:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_6;
 162              		.loc 1 91 3 is_stmt 1 view .LVU60
 163              		.loc 1 91 19 is_stmt 0 view .LVU61
 164 0080 01A9     		add	r1, sp, #4
 165 0082 1B4B     		ldr	r3, .L14+12
 166 0084 0193     		str	r3, [sp, #4]
  92:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 167              		.loc 1 92 3 is_stmt 1 view .LVU62
 168              		.loc 1 92 16 is_stmt 0 view .LVU63
 169 0086 0823     		movs	r3, #8
 170 0088 4B60     		str	r3, [r1, #4]
  93:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 171              		.loc 1 93 3 is_stmt 1 view .LVU64
 172              		.loc 1 93 7 is_stmt 0 view .LVU65
 173 008a 1648     		ldr	r0, .L14
 174 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 175              	.LVL4:
 176              		.loc 1 93 6 discriminator 1 view .LVU66
 177 0090 0028     		cmp	r0, #0
 178 0092 1ED1     		bne	.L11
 179              	.L5:
  94:Core/Src/adc.c ****   {
  95:Core/Src/adc.c ****     Error_Handler();
  96:Core/Src/adc.c ****   }
  97:Core/Src/adc.c **** 
  98:Core/Src/adc.c ****   /** Configure Regular Channel
  99:Core/Src/adc.c ****   */
 100:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_7;
 180              		.loc 1 100 3 is_stmt 1 view .LVU67
 181              		.loc 1 100 19 is_stmt 0 view .LVU68
 182 0094 01A9     		add	r1, sp, #4
 183 0096 174B     		ldr	r3, .L14+16
 184 0098 0193     		str	r3, [sp, #4]
 101:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 185              		.loc 1 101 3 is_stmt 1 view .LVU69
ARM GAS  /tmp/cc9Ss9bi.s 			page 6


 186              		.loc 1 101 16 is_stmt 0 view .LVU70
 187 009a 0C23     		movs	r3, #12
 188 009c 4B60     		str	r3, [r1, #4]
 102:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 189              		.loc 1 102 3 is_stmt 1 view .LVU71
 190              		.loc 1 102 7 is_stmt 0 view .LVU72
 191 009e 1148     		ldr	r0, .L14
 192 00a0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 193              	.LVL5:
 194              		.loc 1 102 6 discriminator 1 view .LVU73
 195 00a4 0028     		cmp	r0, #0
 196 00a6 17D1     		bne	.L12
 197              	.L6:
 103:Core/Src/adc.c ****   {
 104:Core/Src/adc.c ****     Error_Handler();
 105:Core/Src/adc.c ****   }
 106:Core/Src/adc.c **** 
 107:Core/Src/adc.c ****   /** Configure Regular Channel
 108:Core/Src/adc.c ****   */
 109:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 198              		.loc 1 109 3 is_stmt 1 view .LVU74
 199              		.loc 1 109 19 is_stmt 0 view .LVU75
 200 00a8 01A9     		add	r1, sp, #4
 201 00aa 134B     		ldr	r3, .L14+20
 202 00ac 0193     		str	r3, [sp, #4]
 110:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 203              		.loc 1 110 3 is_stmt 1 view .LVU76
 204              		.loc 1 110 16 is_stmt 0 view .LVU77
 205 00ae 1023     		movs	r3, #16
 206 00b0 4B60     		str	r3, [r1, #4]
 111:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 207              		.loc 1 111 3 is_stmt 1 view .LVU78
 208              		.loc 1 111 7 is_stmt 0 view .LVU79
 209 00b2 0C48     		ldr	r0, .L14
 210 00b4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 211              	.LVL6:
 212              		.loc 1 111 6 discriminator 1 view .LVU80
 213 00b8 0028     		cmp	r0, #0
 214 00ba 10D1     		bne	.L13
 215              	.L1:
 112:Core/Src/adc.c ****   {
 113:Core/Src/adc.c ****     Error_Handler();
 114:Core/Src/adc.c ****   }
 115:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 116:Core/Src/adc.c **** 
 117:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 118:Core/Src/adc.c **** 
 119:Core/Src/adc.c **** }
 216              		.loc 1 119 1 view .LVU81
 217 00bc 05B0     		add	sp, sp, #20
 218              		@ sp needed
 219 00be 00BD     		pop	{pc}
 220              	.L8:
  67:Core/Src/adc.c ****   }
 221              		.loc 1 67 5 is_stmt 1 view .LVU82
 222 00c0 FFF7FEFF 		bl	Error_Handler
 223              	.LVL7:
ARM GAS  /tmp/cc9Ss9bi.s 			page 7


 224 00c4 C7E7     		b	.L2
 225              	.L9:
  77:Core/Src/adc.c ****   }
 226              		.loc 1 77 5 view .LVU83
 227 00c6 FFF7FEFF 		bl	Error_Handler
 228              	.LVL8:
 229 00ca CFE7     		b	.L3
 230              	.L10:
  86:Core/Src/adc.c ****   }
 231              		.loc 1 86 5 view .LVU84
 232 00cc FFF7FEFF 		bl	Error_Handler
 233              	.LVL9:
 234 00d0 D6E7     		b	.L4
 235              	.L11:
  95:Core/Src/adc.c ****   }
 236              		.loc 1 95 5 view .LVU85
 237 00d2 FFF7FEFF 		bl	Error_Handler
 238              	.LVL10:
 239 00d6 DDE7     		b	.L5
 240              	.L12:
 104:Core/Src/adc.c ****   }
 241              		.loc 1 104 5 view .LVU86
 242 00d8 FFF7FEFF 		bl	Error_Handler
 243              	.LVL11:
 244 00dc E4E7     		b	.L6
 245              	.L13:
 113:Core/Src/adc.c ****   }
 246              		.loc 1 113 5 view .LVU87
 247 00de FFF7FEFF 		bl	Error_Handler
 248              	.LVL12:
 249              		.loc 1 119 1 is_stmt 0 view .LVU88
 250 00e2 EBE7     		b	.L1
 251              	.L15:
 252              		.align	2
 253              	.L14:
 254 00e4 00000000 		.word	hadc1
 255 00e8 00240140 		.word	1073816576
 256 00ec 02000004 		.word	67108866
 257 00f0 40000018 		.word	402653248
 258 00f4 8000001C 		.word	469762176
 259 00f8 001000B0 		.word	-1342173184
 260              		.cfi_endproc
 261              	.LFE496:
 263              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 264              		.align	1
 265              		.global	HAL_ADC_MspInit
 266              		.syntax unified
 267              		.code	16
 268              		.thumb_func
 270              	HAL_ADC_MspInit:
 271              	.LVL13:
 272              	.LFB497:
 120:Core/Src/adc.c **** 
 121:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 122:Core/Src/adc.c **** {
 273              		.loc 1 122 1 is_stmt 1 view -0
 274              		.cfi_startproc
ARM GAS  /tmp/cc9Ss9bi.s 			page 8


 275              		@ args = 0, pretend = 0, frame = 32
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		.loc 1 122 1 is_stmt 0 view .LVU90
 278 0000 10B5     		push	{r4, lr}
 279              	.LCFI2:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 0002 88B0     		sub	sp, sp, #32
 284              	.LCFI3:
 285              		.cfi_def_cfa_offset 40
 286 0004 0400     		movs	r4, r0
 123:Core/Src/adc.c **** 
 124:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 287              		.loc 1 124 3 is_stmt 1 view .LVU91
 288              		.loc 1 124 20 is_stmt 0 view .LVU92
 289 0006 1422     		movs	r2, #20
 290 0008 0021     		movs	r1, #0
 291 000a 03A8     		add	r0, sp, #12
 292              	.LVL14:
 293              		.loc 1 124 20 view .LVU93
 294 000c FFF7FEFF 		bl	memset
 295              	.LVL15:
 125:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 296              		.loc 1 125 3 is_stmt 1 view .LVU94
 297              		.loc 1 125 15 is_stmt 0 view .LVU95
 298 0010 2268     		ldr	r2, [r4]
 299              		.loc 1 125 5 view .LVU96
 300 0012 1E4B     		ldr	r3, .L21
 301 0014 9A42     		cmp	r2, r3
 302 0016 01D0     		beq	.L19
 303              	.L16:
 126:Core/Src/adc.c ****   {
 127:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 128:Core/Src/adc.c **** 
 129:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 130:Core/Src/adc.c ****     /* ADC1 clock enable */
 131:Core/Src/adc.c ****     __HAL_RCC_ADC_CLK_ENABLE();
 132:Core/Src/adc.c **** 
 133:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 134:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 135:Core/Src/adc.c ****     PA0     ------> ADC1_IN0
 136:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 137:Core/Src/adc.c ****     PA6     ------> ADC1_IN6
 138:Core/Src/adc.c ****     PA7     ------> ADC1_IN7
 139:Core/Src/adc.c ****     */
 140:Core/Src/adc.c ****     GPIO_InitStruct.Pin = ADC_VIN_Pin|ADC_5V_Pin|ADC_CURRENT_Pin|ADC_VERSION_Pin;
 141:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 142:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 143:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 144:Core/Src/adc.c **** 
 145:Core/Src/adc.c ****     /* ADC1 DMA Init */
 146:Core/Src/adc.c ****     /* ADC1 Init */
 147:Core/Src/adc.c ****     hdma_adc1.Instance = DMA1_Channel1;
 148:Core/Src/adc.c ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 149:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 150:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
ARM GAS  /tmp/cc9Ss9bi.s 			page 9


 151:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 152:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 153:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 154:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 155:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 156:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 157:Core/Src/adc.c ****     {
 158:Core/Src/adc.c ****       Error_Handler();
 159:Core/Src/adc.c ****     }
 160:Core/Src/adc.c **** 
 161:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 162:Core/Src/adc.c **** 
 163:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 164:Core/Src/adc.c **** 
 165:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 166:Core/Src/adc.c ****   }
 167:Core/Src/adc.c **** }
 304              		.loc 1 167 1 view .LVU97
 305 0018 08B0     		add	sp, sp, #32
 306              		@ sp needed
 307              	.LVL16:
 308              		.loc 1 167 1 view .LVU98
 309 001a 10BD     		pop	{r4, pc}
 310              	.LVL17:
 311              	.L19:
 131:Core/Src/adc.c **** 
 312              		.loc 1 131 5 is_stmt 1 view .LVU99
 313              	.LBB2:
 131:Core/Src/adc.c **** 
 314              		.loc 1 131 5 view .LVU100
 131:Core/Src/adc.c **** 
 315              		.loc 1 131 5 view .LVU101
 316 001c 1C4B     		ldr	r3, .L21+4
 317 001e 1A6C     		ldr	r2, [r3, #64]
 318 0020 8021     		movs	r1, #128
 319 0022 4903     		lsls	r1, r1, #13
 320 0024 0A43     		orrs	r2, r1
 321 0026 1A64     		str	r2, [r3, #64]
 131:Core/Src/adc.c **** 
 322              		.loc 1 131 5 view .LVU102
 323 0028 1A6C     		ldr	r2, [r3, #64]
 324 002a 0A40     		ands	r2, r1
 325 002c 0192     		str	r2, [sp, #4]
 131:Core/Src/adc.c **** 
 326              		.loc 1 131 5 view .LVU103
 327 002e 019A     		ldr	r2, [sp, #4]
 328              	.LBE2:
 131:Core/Src/adc.c **** 
 329              		.loc 1 131 5 view .LVU104
 133:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 330              		.loc 1 133 5 view .LVU105
 331              	.LBB3:
 133:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 332              		.loc 1 133 5 view .LVU106
 133:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 333              		.loc 1 133 5 view .LVU107
 334 0030 596B     		ldr	r1, [r3, #52]
ARM GAS  /tmp/cc9Ss9bi.s 			page 10


 335 0032 0122     		movs	r2, #1
 336 0034 1143     		orrs	r1, r2
 337 0036 5963     		str	r1, [r3, #52]
 133:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 338              		.loc 1 133 5 view .LVU108
 339 0038 5B6B     		ldr	r3, [r3, #52]
 340 003a 1A40     		ands	r2, r3
 341 003c 0292     		str	r2, [sp, #8]
 133:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 342              		.loc 1 133 5 view .LVU109
 343 003e 029B     		ldr	r3, [sp, #8]
 344              	.LBE3:
 133:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 345              		.loc 1 133 5 view .LVU110
 140:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 346              		.loc 1 140 5 view .LVU111
 140:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 347              		.loc 1 140 25 is_stmt 0 view .LVU112
 348 0040 03A9     		add	r1, sp, #12
 349 0042 C323     		movs	r3, #195
 350 0044 0393     		str	r3, [sp, #12]
 141:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 351              		.loc 1 141 5 is_stmt 1 view .LVU113
 141:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 352              		.loc 1 141 26 is_stmt 0 view .LVU114
 353 0046 C03B     		subs	r3, r3, #192
 354 0048 4B60     		str	r3, [r1, #4]
 142:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 355              		.loc 1 142 5 is_stmt 1 view .LVU115
 143:Core/Src/adc.c **** 
 356              		.loc 1 143 5 view .LVU116
 357 004a A020     		movs	r0, #160
 358 004c C005     		lsls	r0, r0, #23
 359 004e FFF7FEFF 		bl	HAL_GPIO_Init
 360              	.LVL18:
 147:Core/Src/adc.c ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 361              		.loc 1 147 5 view .LVU117
 147:Core/Src/adc.c ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 362              		.loc 1 147 24 is_stmt 0 view .LVU118
 363 0052 1048     		ldr	r0, .L21+8
 364 0054 104B     		ldr	r3, .L21+12
 365 0056 0360     		str	r3, [r0]
 148:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 366              		.loc 1 148 5 is_stmt 1 view .LVU119
 148:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 367              		.loc 1 148 28 is_stmt 0 view .LVU120
 368 0058 0523     		movs	r3, #5
 369 005a 4360     		str	r3, [r0, #4]
 149:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 370              		.loc 1 149 5 is_stmt 1 view .LVU121
 149:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 371              		.loc 1 149 30 is_stmt 0 view .LVU122
 372 005c 0023     		movs	r3, #0
 373 005e 8360     		str	r3, [r0, #8]
 150:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 374              		.loc 1 150 5 is_stmt 1 view .LVU123
 150:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
ARM GAS  /tmp/cc9Ss9bi.s 			page 11


 375              		.loc 1 150 30 is_stmt 0 view .LVU124
 376 0060 C360     		str	r3, [r0, #12]
 151:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 377              		.loc 1 151 5 is_stmt 1 view .LVU125
 151:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 378              		.loc 1 151 27 is_stmt 0 view .LVU126
 379 0062 8022     		movs	r2, #128
 380 0064 0261     		str	r2, [r0, #16]
 152:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 381              		.loc 1 152 5 is_stmt 1 view .LVU127
 152:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 382              		.loc 1 152 40 is_stmt 0 view .LVU128
 383 0066 8032     		adds	r2, r2, #128
 384 0068 4261     		str	r2, [r0, #20]
 153:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 385              		.loc 1 153 5 is_stmt 1 view .LVU129
 153:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 386              		.loc 1 153 37 is_stmt 0 view .LVU130
 387 006a 8022     		movs	r2, #128
 388 006c D200     		lsls	r2, r2, #3
 389 006e 8261     		str	r2, [r0, #24]
 154:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 390              		.loc 1 154 5 is_stmt 1 view .LVU131
 154:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 391              		.loc 1 154 25 is_stmt 0 view .LVU132
 392 0070 2022     		movs	r2, #32
 393 0072 C261     		str	r2, [r0, #28]
 155:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 394              		.loc 1 155 5 is_stmt 1 view .LVU133
 155:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 395              		.loc 1 155 29 is_stmt 0 view .LVU134
 396 0074 0362     		str	r3, [r0, #32]
 156:Core/Src/adc.c ****     {
 397              		.loc 1 156 5 is_stmt 1 view .LVU135
 156:Core/Src/adc.c ****     {
 398              		.loc 1 156 9 is_stmt 0 view .LVU136
 399 0076 FFF7FEFF 		bl	HAL_DMA_Init
 400              	.LVL19:
 156:Core/Src/adc.c ****     {
 401              		.loc 1 156 8 discriminator 1 view .LVU137
 402 007a 0028     		cmp	r0, #0
 403 007c 03D1     		bne	.L20
 404              	.L18:
 161:Core/Src/adc.c **** 
 405              		.loc 1 161 5 is_stmt 1 view .LVU138
 161:Core/Src/adc.c **** 
 406              		.loc 1 161 5 view .LVU139
 407 007e 054B     		ldr	r3, .L21+8
 408 0080 2365     		str	r3, [r4, #80]
 161:Core/Src/adc.c **** 
 409              		.loc 1 161 5 view .LVU140
 410 0082 9C62     		str	r4, [r3, #40]
 161:Core/Src/adc.c **** 
 411              		.loc 1 161 5 discriminator 1 view .LVU141
 412              		.loc 1 167 1 is_stmt 0 view .LVU142
 413 0084 C8E7     		b	.L16
 414              	.L20:
ARM GAS  /tmp/cc9Ss9bi.s 			page 12


 158:Core/Src/adc.c ****     }
 415              		.loc 1 158 7 is_stmt 1 view .LVU143
 416 0086 FFF7FEFF 		bl	Error_Handler
 417              	.LVL20:
 418 008a F8E7     		b	.L18
 419              	.L22:
 420              		.align	2
 421              	.L21:
 422 008c 00240140 		.word	1073816576
 423 0090 00100240 		.word	1073876992
 424 0094 00000000 		.word	hdma_adc1
 425 0098 08000240 		.word	1073872904
 426              		.cfi_endproc
 427              	.LFE497:
 429              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 430              		.align	1
 431              		.global	HAL_ADC_MspDeInit
 432              		.syntax unified
 433              		.code	16
 434              		.thumb_func
 436              	HAL_ADC_MspDeInit:
 437              	.LVL21:
 438              	.LFB498:
 168:Core/Src/adc.c **** 
 169:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 170:Core/Src/adc.c **** {
 439              		.loc 1 170 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		.loc 1 170 1 is_stmt 0 view .LVU145
 444 0000 10B5     		push	{r4, lr}
 445              	.LCFI4:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 4, -8
 448              		.cfi_offset 14, -4
 449 0002 0400     		movs	r4, r0
 171:Core/Src/adc.c **** 
 172:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 450              		.loc 1 172 3 is_stmt 1 view .LVU146
 451              		.loc 1 172 15 is_stmt 0 view .LVU147
 452 0004 0268     		ldr	r2, [r0]
 453              		.loc 1 172 5 view .LVU148
 454 0006 094B     		ldr	r3, .L26
 455 0008 9A42     		cmp	r2, r3
 456 000a 00D0     		beq	.L25
 457              	.LVL22:
 458              	.L23:
 173:Core/Src/adc.c ****   {
 174:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 175:Core/Src/adc.c **** 
 176:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 177:Core/Src/adc.c ****     /* Peripheral clock disable */
 178:Core/Src/adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
 179:Core/Src/adc.c **** 
 180:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 181:Core/Src/adc.c ****     PA0     ------> ADC1_IN0
ARM GAS  /tmp/cc9Ss9bi.s 			page 13


 182:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 183:Core/Src/adc.c ****     PA6     ------> ADC1_IN6
 184:Core/Src/adc.c ****     PA7     ------> ADC1_IN7
 185:Core/Src/adc.c ****     */
 186:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, ADC_VIN_Pin|ADC_5V_Pin|ADC_CURRENT_Pin|ADC_VERSION_Pin);
 187:Core/Src/adc.c **** 
 188:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 189:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 190:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 191:Core/Src/adc.c **** 
 192:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 193:Core/Src/adc.c ****   }
 194:Core/Src/adc.c **** }
 459              		.loc 1 194 1 view .LVU149
 460              		@ sp needed
 461              	.LVL23:
 462              		.loc 1 194 1 view .LVU150
 463 000c 10BD     		pop	{r4, pc}
 464              	.LVL24:
 465              	.L25:
 178:Core/Src/adc.c **** 
 466              		.loc 1 178 5 is_stmt 1 view .LVU151
 467 000e 084A     		ldr	r2, .L26+4
 468 0010 136C     		ldr	r3, [r2, #64]
 469 0012 0849     		ldr	r1, .L26+8
 470 0014 0B40     		ands	r3, r1
 471 0016 1364     		str	r3, [r2, #64]
 186:Core/Src/adc.c **** 
 472              		.loc 1 186 5 view .LVU152
 473 0018 A020     		movs	r0, #160
 474              	.LVL25:
 186:Core/Src/adc.c **** 
 475              		.loc 1 186 5 is_stmt 0 view .LVU153
 476 001a C321     		movs	r1, #195
 477 001c C005     		lsls	r0, r0, #23
 478 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 479              	.LVL26:
 189:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 480              		.loc 1 189 5 is_stmt 1 view .LVU154
 481 0022 206D     		ldr	r0, [r4, #80]
 482 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 483              	.LVL27:
 484              		.loc 1 194 1 is_stmt 0 view .LVU155
 485 0028 F0E7     		b	.L23
 486              	.L27:
 487 002a C046     		.align	2
 488              	.L26:
 489 002c 00240140 		.word	1073816576
 490 0030 00100240 		.word	1073876992
 491 0034 FFFFEFFF 		.word	-1048577
 492              		.cfi_endproc
 493              	.LFE498:
 495              		.global	hdma_adc1
 496              		.section	.bss.hdma_adc1,"aw",%nobits
 497              		.align	2
 500              	hdma_adc1:
 501 0000 00000000 		.space	96
ARM GAS  /tmp/cc9Ss9bi.s 			page 14


 501      00000000 
 501      00000000 
 501      00000000 
 501      00000000 
 502              		.global	hadc1
 503              		.section	.bss.hadc1,"aw",%nobits
 504              		.align	2
 507              	hadc1:
 508 0000 00000000 		.space	100
 508      00000000 
 508      00000000 
 508      00000000 
 508      00000000 
 509              		.text
 510              	.Letext0:
 511              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 512              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 513              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0b1xx.h"
 514              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 515              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 516              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 517              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 518              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_adc.h"
 519              		.file 10 "Core/Inc/adc.h"
 520              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 521              		.file 12 "Core/Inc/main.h"
 522              		.file 13 "<built-in>"
ARM GAS  /tmp/cc9Ss9bi.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
     /tmp/cc9Ss9bi.s:19     .text.MX_ADC1_Init:00000000 $t
     /tmp/cc9Ss9bi.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/cc9Ss9bi.s:254    .text.MX_ADC1_Init:000000e4 $d
     /tmp/cc9Ss9bi.s:507    .bss.hadc1:00000000 hadc1
     /tmp/cc9Ss9bi.s:264    .text.HAL_ADC_MspInit:00000000 $t
     /tmp/cc9Ss9bi.s:270    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/cc9Ss9bi.s:422    .text.HAL_ADC_MspInit:0000008c $d
     /tmp/cc9Ss9bi.s:500    .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/cc9Ss9bi.s:430    .text.HAL_ADC_MspDeInit:00000000 $t
     /tmp/cc9Ss9bi.s:436    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
     /tmp/cc9Ss9bi.s:489    .text.HAL_ADC_MspDeInit:0000002c $d
     /tmp/cc9Ss9bi.s:497    .bss.hdma_adc1:00000000 $d
     /tmp/cc9Ss9bi.s:504    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
