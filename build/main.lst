ARM GAS  /tmp/ccmlrpaU.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.update_led_status,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	update_led_status:
  25              	.LFB506:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "fdcan.h"
  24:Core/Src/main.c **** #include "iwdg.h"
  25:Core/Src/main.c **** #include "spi.h"
  26:Core/Src/main.c **** #include "tim.h"
  27:Core/Src/main.c **** #include "usb_device.h"
  28:Core/Src/main.c **** #include "gpio.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** #include <stdio.h>
ARM GAS  /tmp/ccmlrpaU.s 			page 2


  34:Core/Src/main.c **** #include <stdint.h>
  35:Core/Src/main.c **** #include <stdbool.h>
  36:Core/Src/main.c **** #include "usbd_cdc_if.h"
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** typedef struct {
  52:Core/Src/main.c ****   uint32_t id;
  53:Core/Src/main.c ****   uint8_t dlc;
  54:Core/Src/main.c ****   uint8_t data[8];
  55:Core/Src/main.c ****   uint8_t channel;  // 1 for FDCAN1, 2 for FDCAN2
  56:Core/Src/main.c **** } can_message_t;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** typedef struct {
  59:Core/Src/main.c ****   uint8_t command;
  60:Core/Src/main.c ****   uint8_t channel;
  61:Core/Src/main.c ****   uint32_t id;
  62:Core/Src/main.c ****   uint8_t dlc;
  63:Core/Src/main.c ****   uint8_t data[8];
  64:Core/Src/main.c **** } usb_can_frame_t;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PM */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PV */
  71:Core/Src/main.c **** uint8_t usb_rx_buffer[USB_BUFFER_SIZE];
  72:Core/Src/main.c **** uint8_t usb_tx_buffer[USB_BUFFER_SIZE];
  73:Core/Src/main.c **** uint8_t usb_rx_index = 0;
  74:Core/Src/main.c **** uint8_t usb_tx_index = 0;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** static can_message_t can_rx_queue[CAN_MAX_MESSAGES];
  77:Core/Src/main.c **** static uint8_t can_rx_queue_head = 0;
  78:Core/Src/main.c **** static uint8_t can_rx_queue_tail = 0;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** static uint32_t can1_rx_count = 0;
  81:Core/Src/main.c **** static uint32_t can2_rx_count = 0;
  82:Core/Src/main.c **** static uint32_t can1_tx_count = 0;
  83:Core/Src/main.c **** static uint32_t can2_tx_count = 0;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** static uint8_t can1_terminator_enabled = 0;
  86:Core/Src/main.c **** static uint8_t can2_terminator_enabled = 0;
  87:Core/Src/main.c **** /* USER CODE END PV */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  90:Core/Src/main.c **** void SystemClock_Config(void);
ARM GAS  /tmp/ccmlrpaU.s 			page 3


  91:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  92:Core/Src/main.c **** static void process_usb_command(uint8_t *data, uint16_t len);
  93:Core/Src/main.c **** static void send_can_message(can_message_t *msg);
  94:Core/Src/main.c **** static void receive_can_message(FDCAN_HandleTypeDef *hfdcan, uint8_t channel);
  95:Core/Src/main.c **** static void send_usb_response(uint8_t *data, uint16_t len);
  96:Core/Src/main.c **** static void update_led_status(void);
  97:Core/Src/main.c **** static void toggle_led(uint16_t pin);
  98:Core/Src/main.c **** /* USER CODE END PFP */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 101:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief  The application entry point.
 107:Core/Src/main.c ****   * @retval int
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** int main(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Core/Src/main.c ****   HAL_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Configure the system clock */
 125:Core/Src/main.c ****   SystemClock_Config();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END SysInit */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Initialize all configured peripherals */
 132:Core/Src/main.c ****   MX_GPIO_Init();
 133:Core/Src/main.c ****   MX_DMA_Init();
 134:Core/Src/main.c ****   MX_FDCAN1_Init();
 135:Core/Src/main.c ****   MX_ADC1_Init();
 136:Core/Src/main.c ****   MX_FDCAN2_Init();
 137:Core/Src/main.c ****   MX_TIM4_Init();
 138:Core/Src/main.c ****   MX_SPI2_Init();
 139:Core/Src/main.c ****   MX_IWDG_Init();
 140:Core/Src/main.c ****   MX_USB_Device_Init();
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   // Start CAN reception
 144:Core/Src/main.c ****   HAL_FDCAN_Start(&hfdcan1);
 145:Core/Src/main.c ****   HAL_FDCAN_Start(&hfdcan2);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   // Activate CAN RX notifications
ARM GAS  /tmp/ccmlrpaU.s 			page 4


 148:Core/Src/main.c ****   HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0);
 149:Core/Src/main.c ****   HAL_FDCAN_ActivateNotification(&hfdcan2, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   // Initialize LED status
 152:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);   // Red LED off
 153:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_SET);   // Green LED off
 154:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);   // Blue LED off
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   // Send initial status
 157:Core/Src/main.c ****   uint8_t init_msg[] = "USB-CAN Adapter Ready\r\n";
 158:Core/Src/main.c ****   CDC_Transmit_FS(init_msg, sizeof(init_msg) - 1);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE END 2 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* Infinite loop */
 163:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 164:Core/Src/main.c ****   uint32_t last_time = HAL_GetTick();
 165:Core/Src/main.c ****   while (1)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     /* USER CODE END WHILE */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 170:Core/Src/main.c ****     // Feed watchdog
 171:Core/Src/main.c ****     HAL_IWDG_Refresh(&hiwdg);
 172:Core/Src/main.c ****     if (HAL_GetTick() - last_time > 1000) {
 173:Core/Src/main.c ****       last_time = HAL_GetTick();
 174:Core/Src/main.c ****       CDC_Transmit_FS(init_msg, sizeof(init_msg) - 1);
 175:Core/Src/main.c ****     }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     // Update LED status
 178:Core/Src/main.c ****     update_led_status();
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****     // Process any pending USB data
 181:Core/Src/main.c ****     if (usb_rx_index > 0) {
 182:Core/Src/main.c ****       process_usb_command(usb_rx_buffer, usb_rx_index);
 183:Core/Src/main.c ****       usb_rx_index = 0;
 184:Core/Src/main.c ****     }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****     // Send any queued CAN messages
 187:Core/Src/main.c ****     while (can_rx_queue_head != can_rx_queue_tail) {
 188:Core/Src/main.c ****       can_message_t *msg = &can_rx_queue[can_rx_queue_tail];
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****       usb_can_frame_t frame;
 191:Core/Src/main.c ****       frame.command = CMD_CAN_RECEIVE;
 192:Core/Src/main.c ****       frame.channel = msg->channel;
 193:Core/Src/main.c ****       frame.id = msg->id;
 194:Core/Src/main.c ****       frame.dlc = msg->dlc;
 195:Core/Src/main.c ****       memcpy(frame.data, msg->data, 8);
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****       send_usb_response((uint8_t*)&frame, sizeof(frame));
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****       can_rx_queue_tail = (can_rx_queue_tail + 1) % CAN_MAX_MESSAGES;
 200:Core/Src/main.c ****     }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****     HAL_Delay(1);
 203:Core/Src/main.c ****   }
 204:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  /tmp/ccmlrpaU.s 			page 5


 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief System Clock Configuration
 209:Core/Src/main.c ****   * @retval None
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c **** void SystemClock_Config(void)
 212:Core/Src/main.c **** {
 213:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 214:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 215:Core/Src/main.c ****   RCC_CRSInitTypeDef pInit = {0};
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 222:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI
 225:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 228:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 230:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 9;
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV3;
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV3;
 238:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 246:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 247:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 248:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     Error_Handler();
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /** Enable the SYSCFG APB clock
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c ****   __HAL_RCC_CRS_CLK_ENABLE();
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /** Configures CRS
 261:Core/Src/main.c ****   */
ARM GAS  /tmp/ccmlrpaU.s 			page 6


 262:Core/Src/main.c ****   pInit.Prescaler = RCC_CRS_SYNC_DIV1;
 263:Core/Src/main.c ****   pInit.Source = RCC_CRS_SYNC_SOURCE_USB;
 264:Core/Src/main.c ****   pInit.Polarity = RCC_CRS_SYNC_POLARITY_RISING;
 265:Core/Src/main.c ****   pInit.ReloadValue = __HAL_RCC_CRS_RELOADVALUE_CALCULATE(48000000,1000);
 266:Core/Src/main.c ****   pInit.ErrorLimitValue = 34;
 267:Core/Src/main.c ****   pInit.HSI48CalibrationValue = 32;
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   HAL_RCCEx_CRSConfig(&pInit);
 270:Core/Src/main.c **** }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /* USB-CAN Converter Helper Functions */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** static void process_usb_command(uint8_t *data, uint16_t len)
 277:Core/Src/main.c **** {
 278:Core/Src/main.c ****     if (len < sizeof(usb_can_frame_t)) {
 279:Core/Src/main.c ****         return;
 280:Core/Src/main.c ****     }
 281:Core/Src/main.c ****     
 282:Core/Src/main.c ****     usb_can_frame_t *frame = (usb_can_frame_t*)data;
 283:Core/Src/main.c ****     
 284:Core/Src/main.c ****     switch (frame->command) {
 285:Core/Src/main.c ****         case CMD_CAN_SEND: {
 286:Core/Src/main.c ****             can_message_t msg;
 287:Core/Src/main.c ****             msg.id = frame->id;
 288:Core/Src/main.c ****             msg.dlc = frame->dlc;
 289:Core/Src/main.c ****             msg.channel = frame->channel;
 290:Core/Src/main.c ****             memcpy(msg.data, frame->data, 8);
 291:Core/Src/main.c ****             send_can_message(&msg);
 292:Core/Src/main.c ****             break;
 293:Core/Src/main.c ****         }
 294:Core/Src/main.c ****         case CMD_CAN_STATUS: {
 295:Core/Src/main.c ****             uint8_t status_msg[64];
 296:Core/Src/main.c ****             int len = snprintf((char*)status_msg, sizeof(status_msg),
 297:Core/Src/main.c ****                 "CAN1: RX=%lu TX=%lu, CAN2: RX=%lu TX=%lu\r\n",
 298:Core/Src/main.c ****                 can1_rx_count, can1_tx_count, can2_rx_count, can2_tx_count);
 299:Core/Src/main.c ****             send_usb_response(status_msg, len);
 300:Core/Src/main.c ****             break;
 301:Core/Src/main.c ****         }
 302:Core/Src/main.c ****         case CMD_CAN_CONFIG: {
 303:Core/Src/main.c ****             if (frame->channel == 1) {
 304:Core/Src/main.c ****                 can1_terminator_enabled = frame->data[0];
 305:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, 
 306:Core/Src/main.c ****                     can1_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 307:Core/Src/main.c ****             } else if (frame->channel == 2) {
 308:Core/Src/main.c ****                 can2_terminator_enabled = frame->data[0];
 309:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 
 310:Core/Src/main.c ****                     can2_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 311:Core/Src/main.c ****             }
 312:Core/Src/main.c ****             break;
 313:Core/Src/main.c ****         }
 314:Core/Src/main.c ****         case CMD_CAN_RESET: {
 315:Core/Src/main.c ****             can1_rx_count = 0;
 316:Core/Src/main.c ****             can1_tx_count = 0;
 317:Core/Src/main.c ****             can2_rx_count = 0;
 318:Core/Src/main.c ****             can2_tx_count = 0;
ARM GAS  /tmp/ccmlrpaU.s 			page 7


 319:Core/Src/main.c ****             uint8_t reset_msg[] = "Counters reset\r\n";
 320:Core/Src/main.c ****             send_usb_response(reset_msg, strlen((char*)reset_msg));
 321:Core/Src/main.c ****             break;
 322:Core/Src/main.c ****         }
 323:Core/Src/main.c ****     }
 324:Core/Src/main.c **** }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** static void send_can_message(can_message_t *msg)
 327:Core/Src/main.c **** {
 328:Core/Src/main.c ****     FDCAN_TxHeaderTypeDef tx_header;
 329:Core/Src/main.c ****     tx_header.Identifier = msg->id;
 330:Core/Src/main.c ****     tx_header.IdType = FDCAN_STANDARD_ID;
 331:Core/Src/main.c ****     tx_header.TxFrameType = FDCAN_DATA_FRAME;
 332:Core/Src/main.c ****     tx_header.DataLength = msg->dlc;
 333:Core/Src/main.c ****     tx_header.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 334:Core/Src/main.c ****     tx_header.BitRateSwitch = FDCAN_BRS_OFF;
 335:Core/Src/main.c ****     tx_header.FDFormat = FDCAN_CLASSIC_CAN;
 336:Core/Src/main.c ****     tx_header.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 337:Core/Src/main.c ****     tx_header.MessageMarker = 0;
 338:Core/Src/main.c ****     
 339:Core/Src/main.c ****     FDCAN_HandleTypeDef *hfdcan = (msg->channel == 1) ? &hfdcan1 : &hfdcan2;
 340:Core/Src/main.c ****     
 341:Core/Src/main.c ****     if (HAL_FDCAN_AddMessageToTxFifoQ(hfdcan, &tx_header, msg->data) == HAL_OK) {
 342:Core/Src/main.c ****         if (msg->channel == 1) {
 343:Core/Src/main.c ****             can1_tx_count++;
 344:Core/Src/main.c ****         } else {
 345:Core/Src/main.c ****             can2_tx_count++;
 346:Core/Src/main.c ****         }
 347:Core/Src/main.c ****     }
 348:Core/Src/main.c **** }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** static void receive_can_message(FDCAN_HandleTypeDef *hfdcan, uint8_t channel)
 351:Core/Src/main.c **** {
 352:Core/Src/main.c ****     FDCAN_RxHeaderTypeDef rx_header;
 353:Core/Src/main.c ****     uint8_t rx_data[8];
 354:Core/Src/main.c ****     
 355:Core/Src/main.c ****     if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &rx_header, rx_data) == HAL_OK) {
 356:Core/Src/main.c ****         // Check if we have space in the queue
 357:Core/Src/main.c ****         uint8_t next_head = (can_rx_queue_head + 1) % CAN_MAX_MESSAGES;
 358:Core/Src/main.c ****         if (next_head != can_rx_queue_tail) {
 359:Core/Src/main.c ****             can_message_t *msg = &can_rx_queue[can_rx_queue_head];
 360:Core/Src/main.c ****             msg->id = rx_header.Identifier;
 361:Core/Src/main.c ****             msg->dlc = rx_header.DataLength;
 362:Core/Src/main.c ****             msg->channel = channel;
 363:Core/Src/main.c ****             memcpy(msg->data, rx_data, 8);
 364:Core/Src/main.c ****             can_rx_queue_head = next_head;
 365:Core/Src/main.c ****             
 366:Core/Src/main.c ****             if (channel == 1) {
 367:Core/Src/main.c ****                 can1_rx_count++;
 368:Core/Src/main.c ****             } else {
 369:Core/Src/main.c ****                 can2_rx_count++;
 370:Core/Src/main.c ****             }
 371:Core/Src/main.c ****         }
 372:Core/Src/main.c ****     }
 373:Core/Src/main.c **** }
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** static void send_usb_response(uint8_t *data, uint16_t len)
ARM GAS  /tmp/ccmlrpaU.s 			page 8


 376:Core/Src/main.c **** {
 377:Core/Src/main.c ****     CDC_Transmit_FS(data, len);
 378:Core/Src/main.c **** }
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** static void update_led_status(void)
 381:Core/Src/main.c **** {
  26              		.loc 1 381 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
 382:Core/Src/main.c ****     static uint32_t led_timer = 0;
  35              		.loc 1 382 5 view .LVU1
 383:Core/Src/main.c ****     static uint8_t led_state = 0;
  36              		.loc 1 383 5 view .LVU2
 384:Core/Src/main.c ****     
 385:Core/Src/main.c ****     led_timer++;
  37              		.loc 1 385 5 view .LVU3
  38              		.loc 1 385 14 is_stmt 0 view .LVU4
  39 0002 1C4A     		ldr	r2, .L6
  40 0004 1368     		ldr	r3, [r2]
  41 0006 0133     		adds	r3, r3, #1
  42 0008 1360     		str	r3, [r2]
 386:Core/Src/main.c ****     if (led_timer >= 500) { // 500ms
  43              		.loc 1 386 5 is_stmt 1 view .LVU5
  44              		.loc 1 386 8 is_stmt 0 view .LVU6
  45 000a FA22     		movs	r2, #250
  46 000c 5200     		lsls	r2, r2, #1
  47 000e 9342     		cmp	r3, r2
  48 0010 00D2     		bcs	.L5
  49              	.L1:
 387:Core/Src/main.c ****         led_timer = 0;
 388:Core/Src/main.c ****         led_state = !led_state;
 389:Core/Src/main.c ****         
 390:Core/Src/main.c ****         // Green LED: USB connected
 391:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, led_state ? GPIO_PIN_RESET : GPIO_PIN_SET);
 392:Core/Src/main.c ****         
 393:Core/Src/main.c ****         // Blue LED: CAN activity
 394:Core/Src/main.c ****         if (can1_rx_count > 0 || can2_rx_count > 0 || can1_tx_count > 0 || can2_tx_count > 0) {
 395:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
 396:Core/Src/main.c ****         } else {
 397:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);
 398:Core/Src/main.c ****         }
 399:Core/Src/main.c ****     }
 400:Core/Src/main.c **** }
  50              		.loc 1 400 1 view .LVU7
  51              		@ sp needed
  52 0012 10BD     		pop	{r4, pc}
  53              	.L5:
 387:Core/Src/main.c ****         led_timer = 0;
  54              		.loc 1 387 9 is_stmt 1 view .LVU8
 387:Core/Src/main.c ****         led_timer = 0;
  55              		.loc 1 387 19 is_stmt 0 view .LVU9
ARM GAS  /tmp/ccmlrpaU.s 			page 9


  56 0014 174B     		ldr	r3, .L6
  57 0016 0022     		movs	r2, #0
  58 0018 1A60     		str	r2, [r3]
 388:Core/Src/main.c ****         
  59              		.loc 1 388 9 is_stmt 1 view .LVU10
 388:Core/Src/main.c ****         
  60              		.loc 1 388 21 is_stmt 0 view .LVU11
  61 001a 174B     		ldr	r3, .L6+4
  62 001c 1A78     		ldrb	r2, [r3]
  63 001e 5142     		rsbs	r1, r2, #0
  64 0020 4A41     		adcs	r2, r2, r1
  65 0022 D2B2     		uxtb	r2, r2
 388:Core/Src/main.c ****         
  66              		.loc 1 388 19 view .LVU12
  67 0024 1A70     		strb	r2, [r3]
 391:Core/Src/main.c ****         
  68              		.loc 1 391 9 is_stmt 1 view .LVU13
  69 0026 5342     		rsbs	r3, r2, #0
  70 0028 5A41     		adcs	r2, r2, r3
  71 002a D2B2     		uxtb	r2, r2
  72 002c 8021     		movs	r1, #128
  73 002e C901     		lsls	r1, r1, #7
  74 0030 1248     		ldr	r0, .L6+8
  75 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  76              	.LVL0:
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  77              		.loc 1 394 9 view .LVU14
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  78              		.loc 1 394 27 is_stmt 0 view .LVU15
  79 0036 124B     		ldr	r3, .L6+12
  80 0038 1B68     		ldr	r3, [r3]
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  81              		.loc 1 394 12 view .LVU16
  82 003a 002B     		cmp	r3, #0
  83 003c 0BD1     		bne	.L3
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  84              		.loc 1 394 48 discriminator 1 view .LVU17
  85 003e 114B     		ldr	r3, .L6+16
  86 0040 1B68     		ldr	r3, [r3]
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  87              		.loc 1 394 31 discriminator 1 view .LVU18
  88 0042 002B     		cmp	r3, #0
  89 0044 07D1     		bne	.L3
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  90              		.loc 1 394 69 discriminator 2 view .LVU19
  91 0046 104B     		ldr	r3, .L6+20
  92 0048 1B68     		ldr	r3, [r3]
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  93              		.loc 1 394 52 discriminator 2 view .LVU20
  94 004a 002B     		cmp	r3, #0
  95 004c 03D1     		bne	.L3
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  96              		.loc 1 394 90 discriminator 3 view .LVU21
  97 004e 0F4B     		ldr	r3, .L6+24
  98 0050 1B68     		ldr	r3, [r3]
 394:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
  99              		.loc 1 394 73 discriminator 3 view .LVU22
ARM GAS  /tmp/ccmlrpaU.s 			page 10


 100 0052 002B     		cmp	r3, #0
 101 0054 06D0     		beq	.L4
 102              	.L3:
 395:Core/Src/main.c ****         } else {
 103              		.loc 1 395 13 is_stmt 1 view .LVU23
 104 0056 8021     		movs	r1, #128
 105 0058 0022     		movs	r2, #0
 106 005a 0902     		lsls	r1, r1, #8
 107 005c 0748     		ldr	r0, .L6+8
 108 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 109              	.LVL1:
 110 0062 D6E7     		b	.L1
 111              	.L4:
 397:Core/Src/main.c ****         }
 112              		.loc 1 397 13 view .LVU24
 113 0064 8021     		movs	r1, #128
 114 0066 0122     		movs	r2, #1
 115 0068 0902     		lsls	r1, r1, #8
 116 006a 0448     		ldr	r0, .L6+8
 117 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.LVL2:
 119              		.loc 1 400 1 is_stmt 0 view .LVU25
 120 0070 CFE7     		b	.L1
 121              	.L7:
 122 0072 C046     		.align	2
 123              	.L6:
 124 0074 00000000 		.word	led_timer.1
 125 0078 00000000 		.word	led_state.0
 126 007c 00080050 		.word	1342179328
 127 0080 00000000 		.word	can1_rx_count
 128 0084 00000000 		.word	can2_rx_count
 129 0088 00000000 		.word	can1_tx_count
 130 008c 00000000 		.word	can2_tx_count
 131              		.cfi_endproc
 132              	.LFE506:
 134              		.section	.text.send_usb_response,"ax",%progbits
 135              		.align	1
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 140              	send_usb_response:
 141              	.LVL3:
 142              	.LFB505:
 376:Core/Src/main.c ****     CDC_Transmit_FS(data, len);
 143              		.loc 1 376 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 376:Core/Src/main.c ****     CDC_Transmit_FS(data, len);
 147              		.loc 1 376 1 is_stmt 0 view .LVU27
 148 0000 10B5     		push	{r4, lr}
 149              	.LCFI1:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 4, -8
 152              		.cfi_offset 14, -4
 377:Core/Src/main.c **** }
 153              		.loc 1 377 5 is_stmt 1 view .LVU28
ARM GAS  /tmp/ccmlrpaU.s 			page 11


 154 0002 FFF7FEFF 		bl	CDC_Transmit_FS
 155              	.LVL4:
 378:Core/Src/main.c **** 
 156              		.loc 1 378 1 is_stmt 0 view .LVU29
 157              		@ sp needed
 158 0006 10BD     		pop	{r4, pc}
 159              		.cfi_endproc
 160              	.LFE505:
 162              		.section	.text.send_can_message,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	send_can_message:
 169              	.LVL5:
 170              	.LFB503:
 327:Core/Src/main.c ****     FDCAN_TxHeaderTypeDef tx_header;
 171              		.loc 1 327 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 40
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 327:Core/Src/main.c ****     FDCAN_TxHeaderTypeDef tx_header;
 175              		.loc 1 327 1 is_stmt 0 view .LVU31
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 181 0002 8AB0     		sub	sp, sp, #40
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 48
 184 0004 0400     		movs	r4, r0
 328:Core/Src/main.c ****     tx_header.Identifier = msg->id;
 185              		.loc 1 328 5 is_stmt 1 view .LVU32
 329:Core/Src/main.c ****     tx_header.IdType = FDCAN_STANDARD_ID;
 186              		.loc 1 329 5 view .LVU33
 329:Core/Src/main.c ****     tx_header.IdType = FDCAN_STANDARD_ID;
 187              		.loc 1 329 31 is_stmt 0 view .LVU34
 188 0006 0268     		ldr	r2, [r0]
 329:Core/Src/main.c ****     tx_header.IdType = FDCAN_STANDARD_ID;
 189              		.loc 1 329 26 view .LVU35
 190 0008 0192     		str	r2, [sp, #4]
 330:Core/Src/main.c ****     tx_header.TxFrameType = FDCAN_DATA_FRAME;
 191              		.loc 1 330 5 is_stmt 1 view .LVU36
 330:Core/Src/main.c ****     tx_header.TxFrameType = FDCAN_DATA_FRAME;
 192              		.loc 1 330 22 is_stmt 0 view .LVU37
 193 000a 0022     		movs	r2, #0
 194 000c 0292     		str	r2, [sp, #8]
 331:Core/Src/main.c ****     tx_header.DataLength = msg->dlc;
 195              		.loc 1 331 5 is_stmt 1 view .LVU38
 331:Core/Src/main.c ****     tx_header.DataLength = msg->dlc;
 196              		.loc 1 331 27 is_stmt 0 view .LVU39
 197 000e 0392     		str	r2, [sp, #12]
 332:Core/Src/main.c ****     tx_header.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 198              		.loc 1 332 5 is_stmt 1 view .LVU40
 332:Core/Src/main.c ****     tx_header.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 199              		.loc 1 332 31 is_stmt 0 view .LVU41
ARM GAS  /tmp/ccmlrpaU.s 			page 12


 200 0010 0179     		ldrb	r1, [r0, #4]
 332:Core/Src/main.c ****     tx_header.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 201              		.loc 1 332 26 view .LVU42
 202 0012 0491     		str	r1, [sp, #16]
 333:Core/Src/main.c ****     tx_header.BitRateSwitch = FDCAN_BRS_OFF;
 203              		.loc 1 333 5 is_stmt 1 view .LVU43
 333:Core/Src/main.c ****     tx_header.BitRateSwitch = FDCAN_BRS_OFF;
 204              		.loc 1 333 35 is_stmt 0 view .LVU44
 205 0014 0592     		str	r2, [sp, #20]
 334:Core/Src/main.c ****     tx_header.FDFormat = FDCAN_CLASSIC_CAN;
 206              		.loc 1 334 5 is_stmt 1 view .LVU45
 334:Core/Src/main.c ****     tx_header.FDFormat = FDCAN_CLASSIC_CAN;
 207              		.loc 1 334 29 is_stmt 0 view .LVU46
 208 0016 0692     		str	r2, [sp, #24]
 335:Core/Src/main.c ****     tx_header.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 209              		.loc 1 335 5 is_stmt 1 view .LVU47
 335:Core/Src/main.c ****     tx_header.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 210              		.loc 1 335 24 is_stmt 0 view .LVU48
 211 0018 0792     		str	r2, [sp, #28]
 336:Core/Src/main.c ****     tx_header.MessageMarker = 0;
 212              		.loc 1 336 5 is_stmt 1 view .LVU49
 336:Core/Src/main.c ****     tx_header.MessageMarker = 0;
 213              		.loc 1 336 34 is_stmt 0 view .LVU50
 214 001a 0892     		str	r2, [sp, #32]
 337:Core/Src/main.c ****     
 215              		.loc 1 337 5 is_stmt 1 view .LVU51
 337:Core/Src/main.c ****     
 216              		.loc 1 337 29 is_stmt 0 view .LVU52
 217 001c 0992     		str	r2, [sp, #36]
 339:Core/Src/main.c ****     
 218              		.loc 1 339 5 is_stmt 1 view .LVU53
 339:Core/Src/main.c ****     
 219              		.loc 1 339 39 is_stmt 0 view .LVU54
 220 001e 437B     		ldrb	r3, [r0, #13]
 339:Core/Src/main.c ****     
 221              		.loc 1 339 66 view .LVU55
 222 0020 012B     		cmp	r3, #1
 223 0022 0FD0     		beq	.L14
 339:Core/Src/main.c ****     
 224              		.loc 1 339 66 discriminator 2 view .LVU56
 225 0024 0B48     		ldr	r0, .L16
 226              	.LVL6:
 227              	.L10:
 341:Core/Src/main.c ****         if (msg->channel == 1) {
 228              		.loc 1 341 5 is_stmt 1 view .LVU57
 341:Core/Src/main.c ****         if (msg->channel == 1) {
 229              		.loc 1 341 62 is_stmt 0 view .LVU58
 230 0026 621D     		adds	r2, r4, #5
 341:Core/Src/main.c ****         if (msg->channel == 1) {
 231              		.loc 1 341 9 view .LVU59
 232 0028 01A9     		add	r1, sp, #4
 233 002a FFF7FEFF 		bl	HAL_FDCAN_AddMessageToTxFifoQ
 234              	.LVL7:
 341:Core/Src/main.c ****         if (msg->channel == 1) {
 235              		.loc 1 341 8 discriminator 1 view .LVU60
 236 002e 0028     		cmp	r0, #0
 237 0030 06D1     		bne	.L9
ARM GAS  /tmp/ccmlrpaU.s 			page 13


 342:Core/Src/main.c ****             can1_tx_count++;
 238              		.loc 1 342 9 is_stmt 1 view .LVU61
 342:Core/Src/main.c ****             can1_tx_count++;
 239              		.loc 1 342 16 is_stmt 0 view .LVU62
 240 0032 637B     		ldrb	r3, [r4, #13]
 342:Core/Src/main.c ****             can1_tx_count++;
 241              		.loc 1 342 12 view .LVU63
 242 0034 012B     		cmp	r3, #1
 243 0036 07D0     		beq	.L15
 345:Core/Src/main.c ****         }
 244              		.loc 1 345 13 is_stmt 1 view .LVU64
 345:Core/Src/main.c ****         }
 245              		.loc 1 345 26 is_stmt 0 view .LVU65
 246 0038 074A     		ldr	r2, .L16+4
 247 003a 1368     		ldr	r3, [r2]
 248 003c 0133     		adds	r3, r3, #1
 249 003e 1360     		str	r3, [r2]
 250              	.L9:
 348:Core/Src/main.c **** 
 251              		.loc 1 348 1 view .LVU66
 252 0040 0AB0     		add	sp, sp, #40
 253              		@ sp needed
 254              	.LVL8:
 348:Core/Src/main.c **** 
 255              		.loc 1 348 1 view .LVU67
 256 0042 10BD     		pop	{r4, pc}
 257              	.LVL9:
 258              	.L14:
 339:Core/Src/main.c ****     
 259              		.loc 1 339 66 discriminator 1 view .LVU68
 260 0044 0548     		ldr	r0, .L16+8
 261              	.LVL10:
 339:Core/Src/main.c ****     
 262              		.loc 1 339 66 discriminator 1 view .LVU69
 263 0046 EEE7     		b	.L10
 264              	.LVL11:
 265              	.L15:
 343:Core/Src/main.c ****         } else {
 266              		.loc 1 343 13 is_stmt 1 view .LVU70
 343:Core/Src/main.c ****         } else {
 267              		.loc 1 343 26 is_stmt 0 view .LVU71
 268 0048 054A     		ldr	r2, .L16+12
 269 004a 1368     		ldr	r3, [r2]
 270 004c 0133     		adds	r3, r3, #1
 271 004e 1360     		str	r3, [r2]
 272 0050 F6E7     		b	.L9
 273              	.L17:
 274 0052 C046     		.align	2
 275              	.L16:
 276 0054 00000000 		.word	hfdcan2
 277 0058 00000000 		.word	can2_tx_count
 278 005c 00000000 		.word	hfdcan1
 279 0060 00000000 		.word	can1_tx_count
 280              		.cfi_endproc
 281              	.LFE503:
 283              		.section	.rodata.process_usb_command.str1.4,"aMS",%progbits,1
 284              		.align	2
ARM GAS  /tmp/ccmlrpaU.s 			page 14


 285              	.LC11:
 286 0000 43414E31 		.ascii	"CAN1: RX=%lu TX=%lu, CAN2: RX=%lu TX=%lu\015\012\000"
 286      3A205258 
 286      3D256C75 
 286      2054583D 
 286      256C752C 
 287 002b 00       		.align	2
 288              	.LC18:
 289 002c 436F756E 		.ascii	"Counters reset\015\012\000"
 289      74657273 
 289      20726573 
 289      65740D0A 
 289      00
 290              		.section	.text.process_usb_command,"ax",%progbits
 291              		.align	1
 292              		.syntax unified
 293              		.code	16
 294              		.thumb_func
 296              	process_usb_command:
 297              	.LVL12:
 298              	.LFB502:
 277:Core/Src/main.c ****     if (len < sizeof(usb_can_frame_t)) {
 299              		.loc 1 277 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 64
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Core/Src/main.c ****     if (len < sizeof(usb_can_frame_t)) {
 303              		.loc 1 277 1 is_stmt 0 view .LVU73
 304 0000 30B5     		push	{r4, r5, lr}
 305              	.LCFI4:
 306              		.cfi_def_cfa_offset 12
 307              		.cfi_offset 4, -12
 308              		.cfi_offset 5, -8
 309              		.cfi_offset 14, -4
 310 0002 95B0     		sub	sp, sp, #84
 311              	.LCFI5:
 312              		.cfi_def_cfa_offset 96
 278:Core/Src/main.c ****         return;
 313              		.loc 1 278 5 is_stmt 1 view .LVU74
 278:Core/Src/main.c ****         return;
 314              		.loc 1 278 8 is_stmt 0 view .LVU75
 315 0004 1329     		cmp	r1, #19
 316 0006 4AD9     		bls	.L18
 282:Core/Src/main.c ****     
 317              		.loc 1 282 5 is_stmt 1 view .LVU76
 318              	.LVL13:
 284:Core/Src/main.c ****         case CMD_CAN_SEND: {
 319              		.loc 1 284 5 view .LVU77
 284:Core/Src/main.c ****         case CMD_CAN_SEND: {
 320              		.loc 1 284 18 is_stmt 0 view .LVU78
 321 0008 0378     		ldrb	r3, [r0]
 284:Core/Src/main.c ****         case CMD_CAN_SEND: {
 322              		.loc 1 284 5 view .LVU79
 323 000a 042B     		cmp	r3, #4
 324 000c 49D0     		beq	.L20
 325 000e 19D8     		bhi	.L21
 326 0010 012B     		cmp	r3, #1
ARM GAS  /tmp/ccmlrpaU.s 			page 15


 327 0012 33D0     		beq	.L22
 328 0014 032B     		cmp	r3, #3
 329 0016 42D1     		bne	.L18
 330              	.LBB4:
 295:Core/Src/main.c ****             int len = snprintf((char*)status_msg, sizeof(status_msg),
 331              		.loc 1 295 13 is_stmt 1 view .LVU80
 296:Core/Src/main.c ****                 "CAN1: RX=%lu TX=%lu, CAN2: RX=%lu TX=%lu\r\n",
 332              		.loc 1 296 13 view .LVU81
 296:Core/Src/main.c ****                 "CAN1: RX=%lu TX=%lu, CAN2: RX=%lu TX=%lu\r\n",
 333              		.loc 1 296 23 is_stmt 0 view .LVU82
 334 0018 314B     		ldr	r3, .L27
 335 001a 1B68     		ldr	r3, [r3]
 336 001c 314A     		ldr	r2, .L27+4
 337 001e 04AC     		add	r4, sp, #16
 338 0020 3149     		ldr	r1, .L27+8
 339              	.LVL14:
 296:Core/Src/main.c ****                 "CAN1: RX=%lu TX=%lu, CAN2: RX=%lu TX=%lu\r\n",
 340              		.loc 1 296 23 view .LVU83
 341 0022 0968     		ldr	r1, [r1]
 342 0024 0291     		str	r1, [sp, #8]
 343 0026 3149     		ldr	r1, .L27+12
 344 0028 0968     		ldr	r1, [r1]
 345 002a 0191     		str	r1, [sp, #4]
 346 002c 3049     		ldr	r1, .L27+16
 347 002e 0968     		ldr	r1, [r1]
 348 0030 0091     		str	r1, [sp]
 349 0032 4021     		movs	r1, #64
 350 0034 2000     		movs	r0, r4
 351              	.LVL15:
 296:Core/Src/main.c ****                 "CAN1: RX=%lu TX=%lu, CAN2: RX=%lu TX=%lu\r\n",
 352              		.loc 1 296 23 view .LVU84
 353 0036 FFF7FEFF 		bl	snprintf
 354              	.LVL16:
 299:Core/Src/main.c ****             break;
 355              		.loc 1 299 13 is_stmt 1 view .LVU85
 356 003a 81B2     		uxth	r1, r0
 357 003c 2000     		movs	r0, r4
 358              	.LVL17:
 299:Core/Src/main.c ****             break;
 359              		.loc 1 299 13 is_stmt 0 view .LVU86
 360 003e FFF7FEFF 		bl	send_usb_response
 361              	.LVL18:
 300:Core/Src/main.c ****         }
 362              		.loc 1 300 13 is_stmt 1 view .LVU87
 363 0042 2CE0     		b	.L18
 364              	.LVL19:
 365              	.L21:
 300:Core/Src/main.c ****         }
 366              		.loc 1 300 13 is_stmt 0 view .LVU88
 367              	.LBE4:
 284:Core/Src/main.c ****         case CMD_CAN_SEND: {
 368              		.loc 1 284 5 view .LVU89
 369 0044 052B     		cmp	r3, #5
 370 0046 2AD1     		bne	.L18
 371              	.LBB5:
 315:Core/Src/main.c ****             can1_tx_count = 0;
 372              		.loc 1 315 13 is_stmt 1 view .LVU90
ARM GAS  /tmp/ccmlrpaU.s 			page 16


 315:Core/Src/main.c ****             can1_tx_count = 0;
 373              		.loc 1 315 27 is_stmt 0 view .LVU91
 374 0048 254A     		ldr	r2, .L27
 375 004a 0023     		movs	r3, #0
 376 004c 1360     		str	r3, [r2]
 316:Core/Src/main.c ****             can2_rx_count = 0;
 377              		.loc 1 316 13 is_stmt 1 view .LVU92
 316:Core/Src/main.c ****             can2_rx_count = 0;
 378              		.loc 1 316 27 is_stmt 0 view .LVU93
 379 004e 284A     		ldr	r2, .L27+16
 380 0050 1360     		str	r3, [r2]
 317:Core/Src/main.c ****             can2_tx_count = 0;
 381              		.loc 1 317 13 is_stmt 1 view .LVU94
 317:Core/Src/main.c ****             can2_tx_count = 0;
 382              		.loc 1 317 27 is_stmt 0 view .LVU95
 383 0052 264A     		ldr	r2, .L27+12
 384 0054 1360     		str	r3, [r2]
 318:Core/Src/main.c ****             uint8_t reset_msg[] = "Counters reset\r\n";
 385              		.loc 1 318 13 is_stmt 1 view .LVU96
 318:Core/Src/main.c ****             uint8_t reset_msg[] = "Counters reset\r\n";
 386              		.loc 1 318 27 is_stmt 0 view .LVU97
 387 0056 244A     		ldr	r2, .L27+8
 388 0058 1360     		str	r3, [r2]
 319:Core/Src/main.c ****             send_usb_response(reset_msg, strlen((char*)reset_msg));
 389              		.loc 1 319 13 is_stmt 1 view .LVU98
 319:Core/Src/main.c ****             send_usb_response(reset_msg, strlen((char*)reset_msg));
 390              		.loc 1 319 21 is_stmt 0 view .LVU99
 391 005a 04AC     		add	r4, sp, #16
 392 005c 254B     		ldr	r3, .L27+20
 393 005e 2200     		movs	r2, r4
 394 0060 23CB     		ldmia	r3!, {r0, r1, r5}
 395 0062 23C2     		stmia	r2!, {r0, r1, r5}
 396              	.LVL20:
 319:Core/Src/main.c ****             send_usb_response(reset_msg, strlen((char*)reset_msg));
 397              		.loc 1 319 21 view .LVU100
 398 0064 1968     		ldr	r1, [r3]
 399 0066 1160     		str	r1, [r2]
 400 0068 1B79     		ldrb	r3, [r3, #4]
 401 006a 1371     		strb	r3, [r2, #4]
 320:Core/Src/main.c ****             break;
 402              		.loc 1 320 13 is_stmt 1 view .LVU101
 320:Core/Src/main.c ****             break;
 403              		.loc 1 320 42 is_stmt 0 view .LVU102
 404 006c 2000     		movs	r0, r4
 405 006e FFF7FEFF 		bl	strlen
 406              	.LVL21:
 320:Core/Src/main.c ****             break;
 407              		.loc 1 320 13 discriminator 1 view .LVU103
 408 0072 81B2     		uxth	r1, r0
 409 0074 2000     		movs	r0, r4
 410 0076 FFF7FEFF 		bl	send_usb_response
 411              	.LVL22:
 321:Core/Src/main.c ****         }
 412              		.loc 1 321 13 is_stmt 1 view .LVU104
 413 007a 10E0     		b	.L18
 414              	.LVL23:
 415              	.L22:
ARM GAS  /tmp/ccmlrpaU.s 			page 17


 321:Core/Src/main.c ****         }
 416              		.loc 1 321 13 is_stmt 0 view .LVU105
 417              	.LBE5:
 418              	.LBB6:
 286:Core/Src/main.c ****             msg.id = frame->id;
 419              		.loc 1 286 13 is_stmt 1 view .LVU106
 287:Core/Src/main.c ****             msg.dlc = frame->dlc;
 420              		.loc 1 287 13 view .LVU107
 287:Core/Src/main.c ****             msg.dlc = frame->dlc;
 421              		.loc 1 287 27 is_stmt 0 view .LVU108
 422 007c 4368     		ldr	r3, [r0, #4]
 287:Core/Src/main.c ****             msg.dlc = frame->dlc;
 423              		.loc 1 287 20 view .LVU109
 424 007e 04AC     		add	r4, sp, #16
 425 0080 0493     		str	r3, [sp, #16]
 288:Core/Src/main.c ****             msg.channel = frame->channel;
 426              		.loc 1 288 13 is_stmt 1 view .LVU110
 288:Core/Src/main.c ****             msg.channel = frame->channel;
 427              		.loc 1 288 28 is_stmt 0 view .LVU111
 428 0082 037A     		ldrb	r3, [r0, #8]
 288:Core/Src/main.c ****             msg.channel = frame->channel;
 429              		.loc 1 288 21 view .LVU112
 430 0084 2371     		strb	r3, [r4, #4]
 289:Core/Src/main.c ****             memcpy(msg.data, frame->data, 8);
 431              		.loc 1 289 13 is_stmt 1 view .LVU113
 289:Core/Src/main.c ****             memcpy(msg.data, frame->data, 8);
 432              		.loc 1 289 32 is_stmt 0 view .LVU114
 433 0086 4378     		ldrb	r3, [r0, #1]
 289:Core/Src/main.c ****             memcpy(msg.data, frame->data, 8);
 434              		.loc 1 289 25 view .LVU115
 435 0088 6373     		strb	r3, [r4, #13]
 290:Core/Src/main.c ****             send_can_message(&msg);
 436              		.loc 1 290 13 is_stmt 1 view .LVU116
 437 008a 0100     		movs	r1, r0
 438              	.LVL24:
 290:Core/Src/main.c ****             send_can_message(&msg);
 439              		.loc 1 290 13 is_stmt 0 view .LVU117
 440 008c 0931     		adds	r1, r1, #9
 441 008e 0822     		movs	r2, #8
 442 0090 1520     		movs	r0, #21
 443              	.LVL25:
 290:Core/Src/main.c ****             send_can_message(&msg);
 444              		.loc 1 290 13 view .LVU118
 445 0092 6844     		add	r0, r0, sp
 446 0094 FFF7FEFF 		bl	memcpy
 447              	.LVL26:
 291:Core/Src/main.c ****             break;
 448              		.loc 1 291 13 is_stmt 1 view .LVU119
 449 0098 2000     		movs	r0, r4
 450 009a FFF7FEFF 		bl	send_can_message
 451              	.LVL27:
 292:Core/Src/main.c ****         }
 452              		.loc 1 292 13 view .LVU120
 453              	.L18:
 292:Core/Src/main.c ****         }
 454              		.loc 1 292 13 is_stmt 0 view .LVU121
 455              	.LBE6:
ARM GAS  /tmp/ccmlrpaU.s 			page 18


 324:Core/Src/main.c **** 
 456              		.loc 1 324 1 view .LVU122
 457 009e 15B0     		add	sp, sp, #84
 458              		@ sp needed
 459 00a0 30BD     		pop	{r4, r5, pc}
 460              	.LVL28:
 461              	.L20:
 303:Core/Src/main.c ****                 can1_terminator_enabled = frame->data[0];
 462              		.loc 1 303 13 is_stmt 1 view .LVU123
 303:Core/Src/main.c ****                 can1_terminator_enabled = frame->data[0];
 463              		.loc 1 303 22 is_stmt 0 view .LVU124
 464 00a2 4378     		ldrb	r3, [r0, #1]
 303:Core/Src/main.c ****                 can1_terminator_enabled = frame->data[0];
 465              		.loc 1 303 16 view .LVU125
 466 00a4 012B     		cmp	r3, #1
 467 00a6 0DD0     		beq	.L26
 307:Core/Src/main.c ****                 can2_terminator_enabled = frame->data[0];
 468              		.loc 1 307 20 is_stmt 1 view .LVU126
 307:Core/Src/main.c ****                 can2_terminator_enabled = frame->data[0];
 469              		.loc 1 307 23 is_stmt 0 view .LVU127
 470 00a8 022B     		cmp	r3, #2
 471 00aa F8D1     		bne	.L18
 308:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 
 472              		.loc 1 308 17 is_stmt 1 view .LVU128
 308:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 
 473              		.loc 1 308 54 is_stmt 0 view .LVU129
 474 00ac 427A     		ldrb	r2, [r0, #9]
 308:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 
 475              		.loc 1 308 41 view .LVU130
 476 00ae 124B     		ldr	r3, .L27+24
 477 00b0 1A70     		strb	r2, [r3]
 309:Core/Src/main.c ****                     can2_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 478              		.loc 1 309 17 is_stmt 1 view .LVU131
 479 00b2 531E     		subs	r3, r2, #1
 480 00b4 9A41     		sbcs	r2, r2, r3
 481 00b6 D2B2     		uxtb	r2, r2
 482 00b8 8021     		movs	r1, #128
 483              	.LVL29:
 309:Core/Src/main.c ****                     can2_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 484              		.loc 1 309 17 is_stmt 0 view .LVU132
 485 00ba 0902     		lsls	r1, r1, #8
 486 00bc 0F48     		ldr	r0, .L27+28
 487              	.LVL30:
 309:Core/Src/main.c ****                     can2_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 488              		.loc 1 309 17 view .LVU133
 489 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 490              	.LVL31:
 491 00c2 ECE7     		b	.L18
 492              	.LVL32:
 493              	.L26:
 304:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, 
 494              		.loc 1 304 17 is_stmt 1 view .LVU134
 304:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, 
 495              		.loc 1 304 54 is_stmt 0 view .LVU135
 496 00c4 427A     		ldrb	r2, [r0, #9]
 304:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, 
 497              		.loc 1 304 41 view .LVU136
ARM GAS  /tmp/ccmlrpaU.s 			page 19


 498 00c6 0E4B     		ldr	r3, .L27+32
 499 00c8 1A70     		strb	r2, [r3]
 305:Core/Src/main.c ****                     can1_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 500              		.loc 1 305 17 is_stmt 1 view .LVU137
 501 00ca 531E     		subs	r3, r2, #1
 502 00cc 9A41     		sbcs	r2, r2, r3
 503 00ce D2B2     		uxtb	r2, r2
 504 00d0 8021     		movs	r1, #128
 505              	.LVL33:
 305:Core/Src/main.c ****                     can1_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 506              		.loc 1 305 17 is_stmt 0 view .LVU138
 507 00d2 A020     		movs	r0, #160
 508              	.LVL34:
 305:Core/Src/main.c ****                     can1_terminator_enabled ? GPIO_PIN_SET : GPIO_PIN_RESET);
 509              		.loc 1 305 17 view .LVU139
 510 00d4 0902     		lsls	r1, r1, #8
 511 00d6 C005     		lsls	r0, r0, #23
 512 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 513              	.LVL35:
 514 00dc DFE7     		b	.L18
 515              	.L28:
 516 00de C046     		.align	2
 517              	.L27:
 518 00e0 00000000 		.word	can1_rx_count
 519 00e4 00000000 		.word	.LC11
 520 00e8 00000000 		.word	can2_tx_count
 521 00ec 00000000 		.word	can2_rx_count
 522 00f0 00000000 		.word	can1_tx_count
 523 00f4 2C000000 		.word	.LC18
 524 00f8 00000000 		.word	can2_terminator_enabled
 525 00fc 00040050 		.word	1342178304
 526 0100 00000000 		.word	can1_terminator_enabled
 527              		.cfi_endproc
 528              	.LFE502:
 530              		.section	.text.receive_can_message,"ax",%progbits
 531              		.align	1
 532              		.syntax unified
 533              		.code	16
 534              		.thumb_func
 536              	receive_can_message:
 537              	.LVL36:
 538              	.LFB504:
 351:Core/Src/main.c ****     FDCAN_RxHeaderTypeDef rx_header;
 539              		.loc 1 351 1 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 48
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 351:Core/Src/main.c ****     FDCAN_RxHeaderTypeDef rx_header;
 543              		.loc 1 351 1 is_stmt 0 view .LVU141
 544 0000 70B5     		push	{r4, r5, r6, lr}
 545              	.LCFI6:
 546              		.cfi_def_cfa_offset 16
 547              		.cfi_offset 4, -16
 548              		.cfi_offset 5, -12
 549              		.cfi_offset 6, -8
 550              		.cfi_offset 14, -4
 551 0002 8CB0     		sub	sp, sp, #48
ARM GAS  /tmp/ccmlrpaU.s 			page 20


 552              	.LCFI7:
 553              		.cfi_def_cfa_offset 64
 554 0004 0C00     		movs	r4, r1
 352:Core/Src/main.c ****     uint8_t rx_data[8];
 555              		.loc 1 352 5 is_stmt 1 view .LVU142
 353:Core/Src/main.c ****     
 556              		.loc 1 353 5 view .LVU143
 355:Core/Src/main.c ****         // Check if we have space in the queue
 557              		.loc 1 355 5 view .LVU144
 355:Core/Src/main.c ****         // Check if we have space in the queue
 558              		.loc 1 355 9 is_stmt 0 view .LVU145
 559 0006 6B46     		mov	r3, sp
 560 0008 02AA     		add	r2, sp, #8
 561 000a 4021     		movs	r1, #64
 562              	.LVL37:
 355:Core/Src/main.c ****         // Check if we have space in the queue
 563              		.loc 1 355 9 view .LVU146
 564 000c FFF7FEFF 		bl	HAL_FDCAN_GetRxMessage
 565              	.LVL38:
 355:Core/Src/main.c ****         // Check if we have space in the queue
 566              		.loc 1 355 8 discriminator 1 view .LVU147
 567 0010 0028     		cmp	r0, #0
 568 0012 1FD1     		bne	.L29
 569              	.LBB7:
 357:Core/Src/main.c ****         if (next_head != can_rx_queue_tail) {
 570              		.loc 1 357 9 is_stmt 1 view .LVU148
 357:Core/Src/main.c ****         if (next_head != can_rx_queue_tail) {
 571              		.loc 1 357 48 is_stmt 0 view .LVU149
 572 0014 134B     		ldr	r3, .L33
 573 0016 1E78     		ldrb	r6, [r3]
 574 0018 701C     		adds	r0, r6, #1
 357:Core/Src/main.c ****         if (next_head != can_rx_queue_tail) {
 575              		.loc 1 357 53 view .LVU150
 576 001a 0A21     		movs	r1, #10
 577 001c FFF7FEFF 		bl	__aeabi_idivmod
 578              	.LVL39:
 357:Core/Src/main.c ****         if (next_head != can_rx_queue_tail) {
 579              		.loc 1 357 17 view .LVU151
 580 0020 CDB2     		uxtb	r5, r1
 581              	.LVL40:
 358:Core/Src/main.c ****             can_message_t *msg = &can_rx_queue[can_rx_queue_head];
 582              		.loc 1 358 9 is_stmt 1 view .LVU152
 358:Core/Src/main.c ****             can_message_t *msg = &can_rx_queue[can_rx_queue_head];
 583              		.loc 1 358 23 is_stmt 0 view .LVU153
 584 0022 114B     		ldr	r3, .L33+4
 585 0024 1B78     		ldrb	r3, [r3]
 358:Core/Src/main.c ****             can_message_t *msg = &can_rx_queue[can_rx_queue_head];
 586              		.loc 1 358 12 view .LVU154
 587 0026 AB42     		cmp	r3, r5
 588 0028 14D0     		beq	.L29
 589              	.LBB8:
 359:Core/Src/main.c ****             msg->id = rx_header.Identifier;
 590              		.loc 1 359 13 is_stmt 1 view .LVU155
 591              	.LVL41:
 360:Core/Src/main.c ****             msg->dlc = rx_header.DataLength;
 592              		.loc 1 360 13 view .LVU156
 360:Core/Src/main.c ****             msg->dlc = rx_header.DataLength;
ARM GAS  /tmp/ccmlrpaU.s 			page 21


 593              		.loc 1 360 32 is_stmt 0 view .LVU157
 594 002a 029B     		ldr	r3, [sp, #8]
 360:Core/Src/main.c ****             msg->dlc = rx_header.DataLength;
 595              		.loc 1 360 21 view .LVU158
 596 002c 0F48     		ldr	r0, .L33+8
 597 002e 3601     		lsls	r6, r6, #4
 598              	.LVL42:
 360:Core/Src/main.c ****             msg->dlc = rx_header.DataLength;
 599              		.loc 1 360 21 view .LVU159
 600 0030 3350     		str	r3, [r6, r0]
 361:Core/Src/main.c ****             msg->channel = channel;
 601              		.loc 1 361 13 is_stmt 1 view .LVU160
 361:Core/Src/main.c ****             msg->channel = channel;
 602              		.loc 1 361 33 is_stmt 0 view .LVU161
 603 0032 059B     		ldr	r3, [sp, #20]
 361:Core/Src/main.c ****             msg->channel = channel;
 604              		.loc 1 361 22 view .LVU162
 605 0034 8019     		adds	r0, r0, r6
 606              	.LVL43:
 361:Core/Src/main.c ****             msg->channel = channel;
 607              		.loc 1 361 22 view .LVU163
 608 0036 0371     		strb	r3, [r0, #4]
 362:Core/Src/main.c ****             memcpy(msg->data, rx_data, 8);
 609              		.loc 1 362 13 is_stmt 1 view .LVU164
 362:Core/Src/main.c ****             memcpy(msg->data, rx_data, 8);
 610              		.loc 1 362 26 is_stmt 0 view .LVU165
 611 0038 4473     		strb	r4, [r0, #13]
 363:Core/Src/main.c ****             can_rx_queue_head = next_head;
 612              		.loc 1 363 13 is_stmt 1 view .LVU166
 613 003a 0530     		adds	r0, r0, #5
 614              	.LVL44:
 363:Core/Src/main.c ****             can_rx_queue_head = next_head;
 615              		.loc 1 363 13 is_stmt 0 view .LVU167
 616 003c 0822     		movs	r2, #8
 617 003e 6946     		mov	r1, sp
 618 0040 FFF7FEFF 		bl	memcpy
 619              	.LVL45:
 364:Core/Src/main.c ****             
 620              		.loc 1 364 13 is_stmt 1 view .LVU168
 364:Core/Src/main.c ****             
 621              		.loc 1 364 31 is_stmt 0 view .LVU169
 622 0044 074B     		ldr	r3, .L33
 623 0046 1D70     		strb	r5, [r3]
 366:Core/Src/main.c ****                 can1_rx_count++;
 624              		.loc 1 366 13 is_stmt 1 view .LVU170
 366:Core/Src/main.c ****                 can1_rx_count++;
 625              		.loc 1 366 16 is_stmt 0 view .LVU171
 626 0048 012C     		cmp	r4, #1
 627 004a 05D0     		beq	.L32
 369:Core/Src/main.c ****             }
 628              		.loc 1 369 17 is_stmt 1 view .LVU172
 369:Core/Src/main.c ****             }
 629              		.loc 1 369 30 is_stmt 0 view .LVU173
 630 004c 084A     		ldr	r2, .L33+12
 631 004e 1368     		ldr	r3, [r2]
 632 0050 0133     		adds	r3, r3, #1
 633 0052 1360     		str	r3, [r2]
ARM GAS  /tmp/ccmlrpaU.s 			page 22


 634              	.LVL46:
 635              	.L29:
 369:Core/Src/main.c ****             }
 636              		.loc 1 369 30 view .LVU174
 637              	.LBE8:
 638              	.LBE7:
 373:Core/Src/main.c **** 
 639              		.loc 1 373 1 view .LVU175
 640 0054 0CB0     		add	sp, sp, #48
 641              		@ sp needed
 642              	.LVL47:
 373:Core/Src/main.c **** 
 643              		.loc 1 373 1 view .LVU176
 644 0056 70BD     		pop	{r4, r5, r6, pc}
 645              	.LVL48:
 646              	.L32:
 647              	.LBB10:
 648              	.LBB9:
 367:Core/Src/main.c ****             } else {
 649              		.loc 1 367 17 is_stmt 1 view .LVU177
 367:Core/Src/main.c ****             } else {
 650              		.loc 1 367 30 is_stmt 0 view .LVU178
 651 0058 064A     		ldr	r2, .L33+16
 652 005a 1368     		ldr	r3, [r2]
 653 005c 0133     		adds	r3, r3, #1
 654 005e 1360     		str	r3, [r2]
 655 0060 F8E7     		b	.L29
 656              	.L34:
 657 0062 C046     		.align	2
 658              	.L33:
 659 0064 00000000 		.word	can_rx_queue_head
 660 0068 00000000 		.word	can_rx_queue_tail
 661 006c 00000000 		.word	can_rx_queue
 662 0070 00000000 		.word	can2_rx_count
 663 0074 00000000 		.word	can1_rx_count
 664              	.LBE9:
 665              	.LBE10:
 666              		.cfi_endproc
 667              	.LFE504:
 669              		.section	.text.HAL_FDCAN_RxFifo0Callback,"ax",%progbits
 670              		.align	1
 671              		.global	HAL_FDCAN_RxFifo0Callback
 672              		.syntax unified
 673              		.code	16
 674              		.thumb_func
 676              	HAL_FDCAN_RxFifo0Callback:
 677              	.LVL49:
 678              	.LFB508:
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** static void toggle_led(uint16_t pin)
 403:Core/Src/main.c **** {
 404:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOC, pin);
 405:Core/Src/main.c **** }
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** /* CAN Interrupt Callbacks */
 408:Core/Src/main.c **** void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
 409:Core/Src/main.c **** {
ARM GAS  /tmp/ccmlrpaU.s 			page 23


 679              		.loc 1 409 1 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		.loc 1 409 1 is_stmt 0 view .LVU180
 684 0000 10B5     		push	{r4, lr}
 685              	.LCFI8:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 4, -8
 688              		.cfi_offset 14, -4
 410:Core/Src/main.c ****   if(FDCAN1 == hfdcan->Instance){
 689              		.loc 1 410 3 is_stmt 1 view .LVU181
 690              		.loc 1 410 22 is_stmt 0 view .LVU182
 691 0002 0368     		ldr	r3, [r0]
 692              		.loc 1 410 5 view .LVU183
 693 0004 094A     		ldr	r2, .L44
 694 0006 9342     		cmp	r3, r2
 695 0008 03D0     		beq	.L42
 411:Core/Src/main.c ****     if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 412:Core/Src/main.c ****     {
 413:Core/Src/main.c ****       /* Retrieve Rx messages from RX FIFO0 */
 414:Core/Src/main.c ****       if (RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) {
 415:Core/Src/main.c ****         receive_can_message(hfdcan, FDCAN_RX_FIFO0);
 416:Core/Src/main.c ****       }
 417:Core/Src/main.c ****       }
 418:Core/Src/main.c ****     return;
 419:Core/Src/main.c ****   }
 420:Core/Src/main.c ****   if (FDCAN2 == hfdcan->Instance){
 696              		.loc 1 420 3 is_stmt 1 view .LVU184
 697              		.loc 1 420 6 is_stmt 0 view .LVU185
 698 000a 094A     		ldr	r2, .L44+4
 699 000c 9342     		cmp	r3, r2
 700 000e 06D0     		beq	.L43
 701              	.LVL50:
 702              	.L35:
 421:Core/Src/main.c ****     if ((RxFifo0ITs & FDCAN_IT_RX_FIFO1_NEW_MESSAGE) != RESET)
 422:Core/Src/main.c ****     {
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****       if (RxFifo0ITs & FDCAN_IT_RX_FIFO1_NEW_MESSAGE) {
 425:Core/Src/main.c ****         receive_can_message(hfdcan, FDCAN_RX_FIFO0);
 426:Core/Src/main.c ****       }
 427:Core/Src/main.c ****       }
 428:Core/Src/main.c ****     return;
 429:Core/Src/main.c ****   }
 430:Core/Src/main.c **** }
 703              		.loc 1 430 1 view .LVU186
 704              		@ sp needed
 705 0010 10BD     		pop	{r4, pc}
 706              	.LVL51:
 707              	.L42:
 411:Core/Src/main.c ****     if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 708              		.loc 1 411 5 is_stmt 1 view .LVU187
 411:Core/Src/main.c ****     if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 709              		.loc 1 411 7 is_stmt 0 view .LVU188
 710 0012 C907     		lsls	r1, r1, #31
 711 0014 FCD5     		bpl	.L35
 712              	.LVL52:
ARM GAS  /tmp/ccmlrpaU.s 			page 24


 414:Core/Src/main.c ****         receive_can_message(hfdcan, FDCAN_RX_FIFO0);
 713              		.loc 1 414 7 is_stmt 1 view .LVU189
 415:Core/Src/main.c ****       }
 714              		.loc 1 415 9 view .LVU190
 715 0016 4021     		movs	r1, #64
 716 0018 FFF7FEFF 		bl	receive_can_message
 717              	.LVL53:
 418:Core/Src/main.c ****   }
 718              		.loc 1 418 5 view .LVU191
 719 001c F8E7     		b	.L35
 720              	.LVL54:
 721              	.L43:
 421:Core/Src/main.c ****     {
 722              		.loc 1 421 5 view .LVU192
 421:Core/Src/main.c ****     {
 723              		.loc 1 421 8 is_stmt 0 view .LVU193
 724 001e 0907     		lsls	r1, r1, #28
 725 0020 F6D5     		bpl	.L35
 726              	.LVL55:
 424:Core/Src/main.c ****         receive_can_message(hfdcan, FDCAN_RX_FIFO0);
 727              		.loc 1 424 7 is_stmt 1 view .LVU194
 425:Core/Src/main.c ****       }
 728              		.loc 1 425 9 view .LVU195
 729 0022 4021     		movs	r1, #64
 730 0024 FFF7FEFF 		bl	receive_can_message
 731              	.LVL56:
 428:Core/Src/main.c ****   }
 732              		.loc 1 428 5 view .LVU196
 733 0028 F2E7     		b	.L35
 734              	.L45:
 735 002a C046     		.align	2
 736              	.L44:
 737 002c 00640040 		.word	1073767424
 738 0030 00680040 		.word	1073768448
 739              		.cfi_endproc
 740              	.LFE508:
 742              		.section	.text.HAL_FDCAN_TxEventFifoCallback,"ax",%progbits
 743              		.align	1
 744              		.global	HAL_FDCAN_TxEventFifoCallback
 745              		.syntax unified
 746              		.code	16
 747              		.thumb_func
 749              	HAL_FDCAN_TxEventFifoCallback:
 750              	.LVL57:
 751              	.LFB509:
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** void HAL_FDCAN_TxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TxEventFifoITs)
 433:Core/Src/main.c **** {
 752              		.loc 1 433 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 434:Core/Src/main.c ****     // Optional: Handle transmission events
 435:Core/Src/main.c ****     UNUSED(hfdcan);
 757              		.loc 1 435 5 view .LVU198
 436:Core/Src/main.c **** }
ARM GAS  /tmp/ccmlrpaU.s 			page 25


 758              		.loc 1 436 1 is_stmt 0 view .LVU199
 759              		@ sp needed
 760 0000 7047     		bx	lr
 761              		.cfi_endproc
 762              	.LFE509:
 764              		.section	.text.HAL_FDCAN_ErrorCallback,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_FDCAN_ErrorCallback
 767              		.syntax unified
 768              		.code	16
 769              		.thumb_func
 771              	HAL_FDCAN_ErrorCallback:
 772              	.LVL58:
 773              	.LFB510:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** void HAL_FDCAN_ErrorCallback(FDCAN_HandleTypeDef *hfdcan)
 439:Core/Src/main.c **** {
 774              		.loc 1 439 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		.loc 1 439 1 is_stmt 0 view .LVU201
 779 0000 10B5     		push	{r4, lr}
 780              	.LCFI9:
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 4, -8
 783              		.cfi_offset 14, -4
 440:Core/Src/main.c ****     // Handle CAN errors
 441:Core/Src/main.c ****     if (hfdcan == &hfdcan1) {
 784              		.loc 1 441 5 is_stmt 1 view .LVU202
 785              		.loc 1 441 8 is_stmt 0 view .LVU203
 786 0002 094B     		ldr	r3, .L52
 787 0004 9842     		cmp	r0, r3
 788 0006 03D0     		beq	.L50
 442:Core/Src/main.c ****         // Toggle red LED to indicate CAN1 error
 443:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 444:Core/Src/main.c ****     } else if (hfdcan == &hfdcan2) {
 789              		.loc 1 444 12 is_stmt 1 view .LVU204
 790              		.loc 1 444 15 is_stmt 0 view .LVU205
 791 0008 084B     		ldr	r3, .L52+4
 792 000a 9842     		cmp	r0, r3
 793 000c 06D0     		beq	.L51
 794              	.LVL59:
 795              	.L47:
 445:Core/Src/main.c ****         // Toggle red LED to indicate CAN2 error
 446:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 447:Core/Src/main.c ****     }
 448:Core/Src/main.c **** }
 796              		.loc 1 448 1 view .LVU206
 797              		@ sp needed
 798 000e 10BD     		pop	{r4, pc}
 799              	.LVL60:
 800              	.L50:
 443:Core/Src/main.c ****     } else if (hfdcan == &hfdcan2) {
 801              		.loc 1 443 9 is_stmt 1 view .LVU207
 802 0010 8021     		movs	r1, #128
 803 0012 8901     		lsls	r1, r1, #6
ARM GAS  /tmp/ccmlrpaU.s 			page 26


 804 0014 0648     		ldr	r0, .L52+8
 805              	.LVL61:
 443:Core/Src/main.c ****     } else if (hfdcan == &hfdcan2) {
 806              		.loc 1 443 9 is_stmt 0 view .LVU208
 807 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 808              	.LVL62:
 809 001a F8E7     		b	.L47
 810              	.LVL63:
 811              	.L51:
 446:Core/Src/main.c ****     }
 812              		.loc 1 446 9 is_stmt 1 view .LVU209
 813 001c 8021     		movs	r1, #128
 814 001e 8901     		lsls	r1, r1, #6
 815 0020 0348     		ldr	r0, .L52+8
 816              	.LVL64:
 446:Core/Src/main.c ****     }
 817              		.loc 1 446 9 is_stmt 0 view .LVU210
 818 0022 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 819              	.LVL65:
 820              		.loc 1 448 1 view .LVU211
 821 0026 F2E7     		b	.L47
 822              	.L53:
 823              		.align	2
 824              	.L52:
 825 0028 00000000 		.word	hfdcan1
 826 002c 00000000 		.word	hfdcan2
 827 0030 00080050 		.word	1342179328
 828              		.cfi_endproc
 829              	.LFE510:
 831              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 832              		.align	1
 833              		.global	HAL_TIM_PeriodElapsedCallback
 834              		.syntax unified
 835              		.code	16
 836              		.thumb_func
 838              	HAL_TIM_PeriodElapsedCallback:
 839              	.LVL66:
 840              	.LFB511:
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /* USER CODE END 4 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** /**
 453:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 454:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 455:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 456:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 457:Core/Src/main.c ****   * @param  htim : TIM handle
 458:Core/Src/main.c ****   * @retval None
 459:Core/Src/main.c ****   */
 460:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 461:Core/Src/main.c **** {
 841              		.loc 1 461 1 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		.loc 1 461 1 is_stmt 0 view .LVU213
 846 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccmlrpaU.s 			page 27


 847              	.LCFI10:
 848              		.cfi_def_cfa_offset 8
 849              		.cfi_offset 4, -8
 850              		.cfi_offset 14, -4
 462:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 465:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 851              		.loc 1 465 3 is_stmt 1 view .LVU214
 852              		.loc 1 465 11 is_stmt 0 view .LVU215
 853 0002 0268     		ldr	r2, [r0]
 854              		.loc 1 465 6 view .LVU216
 855 0004 034B     		ldr	r3, .L57
 856 0006 9A42     		cmp	r2, r3
 857 0008 00D0     		beq	.L56
 858              	.LVL67:
 859              	.L54:
 466:Core/Src/main.c ****     HAL_IncTick();
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 471:Core/Src/main.c **** }
 860              		.loc 1 471 1 view .LVU217
 861              		@ sp needed
 862 000a 10BD     		pop	{r4, pc}
 863              	.LVL68:
 864              	.L56:
 466:Core/Src/main.c ****     HAL_IncTick();
 865              		.loc 1 466 5 is_stmt 1 view .LVU218
 866 000c FFF7FEFF 		bl	HAL_IncTick
 867              	.LVL69:
 868              		.loc 1 471 1 is_stmt 0 view .LVU219
 869 0010 FBE7     		b	.L54
 870              	.L58:
 871 0012 C046     		.align	2
 872              	.L57:
 873 0014 002C0140 		.word	1073818624
 874              		.cfi_endproc
 875              	.LFE511:
 877              		.section	.text.Error_Handler,"ax",%progbits
 878              		.align	1
 879              		.global	Error_Handler
 880              		.syntax unified
 881              		.code	16
 882              		.thumb_func
 884              	Error_Handler:
 885              	.LFB512:
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** /**
 474:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 475:Core/Src/main.c ****   * @retval None
 476:Core/Src/main.c ****   */
 477:Core/Src/main.c **** void Error_Handler(void)
 478:Core/Src/main.c **** {
 886              		.loc 1 478 1 is_stmt 1 view -0
 887              		.cfi_startproc
ARM GAS  /tmp/ccmlrpaU.s 			page 28


 888              		@ Volatile: function does not return.
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 479:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 480:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 481:Core/Src/main.c ****   __disable_irq();
 892              		.loc 1 481 3 view .LVU221
 893              	.LBB11:
 894              	.LBI11:
 895              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccmlrpaU.s 			page 29


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccmlrpaU.s 			page 30


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  /tmp/ccmlrpaU.s 			page 31


 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 896              		.loc 2 207 27 view .LVU222
 897              	.LBB12:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 898              		.loc 2 209 3 view .LVU223
 899              		.syntax divided
 900              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 901 0000 72B6     		cpsid i
 902              	@ 0 "" 2
 903              		.thumb
ARM GAS  /tmp/ccmlrpaU.s 			page 32


 904              		.syntax unified
 905              	.L60:
 906              	.LBE12:
 907              	.LBE11:
 482:Core/Src/main.c ****   while (1)
 908              		.loc 1 482 3 view .LVU224
 483:Core/Src/main.c ****   {
 484:Core/Src/main.c ****   }
 909              		.loc 1 484 3 view .LVU225
 482:Core/Src/main.c ****   while (1)
 910              		.loc 1 482 9 view .LVU226
 911 0002 FEE7     		b	.L60
 912              		.cfi_endproc
 913              	.LFE512:
 915              		.section	.text.SystemClock_Config,"ax",%progbits
 916              		.align	1
 917              		.global	SystemClock_Config
 918              		.syntax unified
 919              		.code	16
 920              		.thumb_func
 922              	SystemClock_Config:
 923              	.LFB501:
 212:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 924              		.loc 1 212 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 104
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928 0000 10B5     		push	{r4, lr}
 929              	.LCFI11:
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
 933 0002 9AB0     		sub	sp, sp, #104
 934              	.LCFI12:
 935              		.cfi_def_cfa_offset 112
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 936              		.loc 1 213 3 view .LVU228
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 937              		.loc 1 213 22 is_stmt 0 view .LVU229
 938 0004 0BAC     		add	r4, sp, #44
 939 0006 3C22     		movs	r2, #60
 940 0008 0021     		movs	r1, #0
 941 000a 2000     		movs	r0, r4
 942 000c FFF7FEFF 		bl	memset
 943              	.LVL70:
 214:Core/Src/main.c ****   RCC_CRSInitTypeDef pInit = {0};
 944              		.loc 1 214 3 is_stmt 1 view .LVU230
 214:Core/Src/main.c ****   RCC_CRSInitTypeDef pInit = {0};
 945              		.loc 1 214 22 is_stmt 0 view .LVU231
 946 0010 1022     		movs	r2, #16
 947 0012 0021     		movs	r1, #0
 948 0014 07A8     		add	r0, sp, #28
 949 0016 FFF7FEFF 		bl	memset
 950              	.LVL71:
 215:Core/Src/main.c **** 
 951              		.loc 1 215 3 is_stmt 1 view .LVU232
 215:Core/Src/main.c **** 
ARM GAS  /tmp/ccmlrpaU.s 			page 33


 952              		.loc 1 215 22 is_stmt 0 view .LVU233
 953 001a 1822     		movs	r2, #24
 954 001c 0021     		movs	r1, #0
 955 001e 01A8     		add	r0, sp, #4
 956 0020 FFF7FEFF 		bl	memset
 957              	.LVL72:
 219:Core/Src/main.c **** 
 958              		.loc 1 219 3 is_stmt 1 view .LVU234
 959 0024 8020     		movs	r0, #128
 960 0026 8000     		lsls	r0, r0, #2
 961 0028 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 962              	.LVL73:
 224:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 963              		.loc 1 224 3 view .LVU235
 224:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 964              		.loc 1 224 36 is_stmt 0 view .LVU236
 965 002c 2A23     		movs	r3, #42
 966 002e 0B93     		str	r3, [sp, #44]
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 967              		.loc 1 226 3 is_stmt 1 view .LVU237
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 968              		.loc 1 226 30 is_stmt 0 view .LVU238
 969 0030 D633     		adds	r3, r3, #214
 970 0032 0E93     		str	r3, [sp, #56]
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 971              		.loc 1 227 3 is_stmt 1 view .LVU239
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 972              		.loc 1 227 32 is_stmt 0 view .LVU240
 973 0034 8023     		movs	r3, #128
 974 0036 DB03     		lsls	r3, r3, #15
 975 0038 1293     		str	r3, [sp, #72]
 228:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 976              		.loc 1 228 3 is_stmt 1 view .LVU241
 228:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 977              		.loc 1 228 28 is_stmt 0 view .LVU242
 978 003a 0023     		movs	r3, #0
 979 003c 0F93     		str	r3, [sp, #60]
 229:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 980              		.loc 1 229 3 is_stmt 1 view .LVU243
 229:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 981              		.loc 1 229 41 is_stmt 0 view .LVU244
 982 003e 4022     		movs	r2, #64
 983 0040 1092     		str	r2, [sp, #64]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 984              		.loc 1 230 3 is_stmt 1 view .LVU245
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 985              		.loc 1 230 30 is_stmt 0 view .LVU246
 986 0042 3F3A     		subs	r2, r2, #63
 987 0044 1192     		str	r2, [sp, #68]
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 988              		.loc 1 231 3 is_stmt 1 view .LVU247
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 989              		.loc 1 231 34 is_stmt 0 view .LVU248
 990 0046 0132     		adds	r2, r2, #1
 991 0048 1392     		str	r2, [sp, #76]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 992              		.loc 1 232 3 is_stmt 1 view .LVU249
ARM GAS  /tmp/ccmlrpaU.s 			page 34


 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 993              		.loc 1 232 35 is_stmt 0 view .LVU250
 994 004a 1492     		str	r2, [sp, #80]
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 9;
 995              		.loc 1 233 3 is_stmt 1 view .LVU251
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 9;
 996              		.loc 1 233 30 is_stmt 0 view .LVU252
 997 004c 1593     		str	r3, [sp, #84]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 998              		.loc 1 234 3 is_stmt 1 view .LVU253
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 999              		.loc 1 234 30 is_stmt 0 view .LVU254
 1000 004e 0933     		adds	r3, r3, #9
 1001 0050 1693     		str	r3, [sp, #88]
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV3;
 1002              		.loc 1 235 3 is_stmt 1 view .LVU255
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV3;
 1003              		.loc 1 235 30 is_stmt 0 view .LVU256
 1004 0052 8023     		movs	r3, #128
 1005 0054 9B02     		lsls	r3, r3, #10
 1006 0056 1793     		str	r3, [sp, #92]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV3;
 1007              		.loc 1 236 3 is_stmt 1 view .LVU257
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV3;
 1008              		.loc 1 236 30 is_stmt 0 view .LVU258
 1009 0058 8023     		movs	r3, #128
 1010 005a DB04     		lsls	r3, r3, #19
 1011 005c 1893     		str	r3, [sp, #96]
 237:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1012              		.loc 1 237 3 is_stmt 1 view .LVU259
 237:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1013              		.loc 1 237 30 is_stmt 0 view .LVU260
 1014 005e 8023     		movs	r3, #128
 1015 0060 DB05     		lsls	r3, r3, #23
 1016 0062 1993     		str	r3, [sp, #100]
 238:Core/Src/main.c ****   {
 1017              		.loc 1 238 3 is_stmt 1 view .LVU261
 238:Core/Src/main.c ****   {
 1018              		.loc 1 238 7 is_stmt 0 view .LVU262
 1019 0064 2000     		movs	r0, r4
 1020 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1021              	.LVL74:
 238:Core/Src/main.c ****   {
 1022              		.loc 1 238 6 discriminator 1 view .LVU263
 1023 006a 0028     		cmp	r0, #0
 1024 006c 27D1     		bne	.L64
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1025              		.loc 1 245 3 is_stmt 1 view .LVU264
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1026              		.loc 1 245 31 is_stmt 0 view .LVU265
 1027 006e 07A8     		add	r0, sp, #28
 1028 0070 0723     		movs	r3, #7
 1029 0072 0793     		str	r3, [sp, #28]
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1030              		.loc 1 247 3 is_stmt 1 view .LVU266
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1031              		.loc 1 247 34 is_stmt 0 view .LVU267
ARM GAS  /tmp/ccmlrpaU.s 			page 35


 1032 0074 053B     		subs	r3, r3, #5
 1033 0076 4360     		str	r3, [r0, #4]
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1034              		.loc 1 248 3 is_stmt 1 view .LVU268
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1035              		.loc 1 248 35 is_stmt 0 view .LVU269
 1036 0078 0023     		movs	r3, #0
 1037 007a 8360     		str	r3, [r0, #8]
 249:Core/Src/main.c **** 
 1038              		.loc 1 249 3 is_stmt 1 view .LVU270
 249:Core/Src/main.c **** 
 1039              		.loc 1 249 36 is_stmt 0 view .LVU271
 1040 007c C360     		str	r3, [r0, #12]
 251:Core/Src/main.c ****   {
 1041              		.loc 1 251 3 is_stmt 1 view .LVU272
 251:Core/Src/main.c ****   {
 1042              		.loc 1 251 7 is_stmt 0 view .LVU273
 1043 007e 0121     		movs	r1, #1
 1044 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1045              	.LVL75:
 251:Core/Src/main.c ****   {
 1046              		.loc 1 251 6 discriminator 1 view .LVU274
 1047 0084 0028     		cmp	r0, #0
 1048 0086 1CD1     		bne	.L65
 258:Core/Src/main.c **** 
 1049              		.loc 1 258 3 is_stmt 1 view .LVU275
 1050              	.LBB13:
 258:Core/Src/main.c **** 
 1051              		.loc 1 258 3 view .LVU276
 258:Core/Src/main.c **** 
 1052              		.loc 1 258 3 view .LVU277
 1053 0088 0F4B     		ldr	r3, .L66
 1054 008a DA6B     		ldr	r2, [r3, #60]
 1055 008c 8021     		movs	r1, #128
 1056 008e 4902     		lsls	r1, r1, #9
 1057 0090 0A43     		orrs	r2, r1
 1058 0092 DA63     		str	r2, [r3, #60]
 258:Core/Src/main.c **** 
 1059              		.loc 1 258 3 view .LVU278
 1060 0094 DB6B     		ldr	r3, [r3, #60]
 1061 0096 0B40     		ands	r3, r1
 1062 0098 0093     		str	r3, [sp]
 258:Core/Src/main.c **** 
 1063              		.loc 1 258 3 view .LVU279
 1064 009a 009B     		ldr	r3, [sp]
 1065              	.LBE13:
 258:Core/Src/main.c **** 
 1066              		.loc 1 258 3 view .LVU280
 262:Core/Src/main.c ****   pInit.Source = RCC_CRS_SYNC_SOURCE_USB;
 1067              		.loc 1 262 3 view .LVU281
 262:Core/Src/main.c ****   pInit.Source = RCC_CRS_SYNC_SOURCE_USB;
 1068              		.loc 1 262 19 is_stmt 0 view .LVU282
 1069 009c 01A8     		add	r0, sp, #4
 1070 009e 0023     		movs	r3, #0
 1071 00a0 0193     		str	r3, [sp, #4]
 263:Core/Src/main.c ****   pInit.Polarity = RCC_CRS_SYNC_POLARITY_RISING;
 1072              		.loc 1 263 3 is_stmt 1 view .LVU283
ARM GAS  /tmp/ccmlrpaU.s 			page 36


 263:Core/Src/main.c ****   pInit.Polarity = RCC_CRS_SYNC_POLARITY_RISING;
 1073              		.loc 1 263 16 is_stmt 0 view .LVU284
 1074 00a2 8022     		movs	r2, #128
 1075 00a4 9205     		lsls	r2, r2, #22
 1076 00a6 4260     		str	r2, [r0, #4]
 264:Core/Src/main.c ****   pInit.ReloadValue = __HAL_RCC_CRS_RELOADVALUE_CALCULATE(48000000,1000);
 1077              		.loc 1 264 3 is_stmt 1 view .LVU285
 264:Core/Src/main.c ****   pInit.ReloadValue = __HAL_RCC_CRS_RELOADVALUE_CALCULATE(48000000,1000);
 1078              		.loc 1 264 18 is_stmt 0 view .LVU286
 1079 00a8 8360     		str	r3, [r0, #8]
 265:Core/Src/main.c ****   pInit.ErrorLimitValue = 34;
 1080              		.loc 1 265 3 is_stmt 1 view .LVU287
 265:Core/Src/main.c ****   pInit.ErrorLimitValue = 34;
 1081              		.loc 1 265 21 is_stmt 0 view .LVU288
 1082 00aa 084B     		ldr	r3, .L66+4
 1083 00ac C360     		str	r3, [r0, #12]
 266:Core/Src/main.c ****   pInit.HSI48CalibrationValue = 32;
 1084              		.loc 1 266 3 is_stmt 1 view .LVU289
 266:Core/Src/main.c ****   pInit.HSI48CalibrationValue = 32;
 1085              		.loc 1 266 25 is_stmt 0 view .LVU290
 1086 00ae 2223     		movs	r3, #34
 1087 00b0 0361     		str	r3, [r0, #16]
 267:Core/Src/main.c **** 
 1088              		.loc 1 267 3 is_stmt 1 view .LVU291
 267:Core/Src/main.c **** 
 1089              		.loc 1 267 31 is_stmt 0 view .LVU292
 1090 00b2 023B     		subs	r3, r3, #2
 1091 00b4 4361     		str	r3, [r0, #20]
 269:Core/Src/main.c **** }
 1092              		.loc 1 269 3 is_stmt 1 view .LVU293
 1093 00b6 FFF7FEFF 		bl	HAL_RCCEx_CRSConfig
 1094              	.LVL76:
 270:Core/Src/main.c **** 
 1095              		.loc 1 270 1 is_stmt 0 view .LVU294
 1096 00ba 1AB0     		add	sp, sp, #104
 1097              		@ sp needed
 1098 00bc 10BD     		pop	{r4, pc}
 1099              	.L64:
 240:Core/Src/main.c ****   }
 1100              		.loc 1 240 5 is_stmt 1 view .LVU295
 1101 00be FFF7FEFF 		bl	Error_Handler
 1102              	.LVL77:
 1103              	.L65:
 253:Core/Src/main.c ****   }
 1104              		.loc 1 253 5 view .LVU296
 1105 00c2 FFF7FEFF 		bl	Error_Handler
 1106              	.LVL78:
 1107              	.L67:
 1108 00c6 C046     		.align	2
 1109              	.L66:
 1110 00c8 00100240 		.word	1073876992
 1111 00cc 7FBB0000 		.word	47999
 1112              		.cfi_endproc
 1113              	.LFE501:
 1115              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1116              		.align	2
 1117              	.LC29:
ARM GAS  /tmp/ccmlrpaU.s 			page 37


 1118 0000 5553422D 		.ascii	"USB-CAN Adapter Ready\015\012\000"
 1118      43414E20 
 1118      41646170 
 1118      74657220 
 1118      52656164 
 1119              		.section	.text.main,"ax",%progbits
 1120              		.align	1
 1121              		.global	main
 1122              		.syntax unified
 1123              		.code	16
 1124              		.thumb_func
 1126              	main:
 1127              	.LFB500:
 110:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1128              		.loc 1 110 1 view -0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 48
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132 0000 30B5     		push	{r4, r5, lr}
 1133              	.LCFI13:
 1134              		.cfi_def_cfa_offset 12
 1135              		.cfi_offset 4, -12
 1136              		.cfi_offset 5, -8
 1137              		.cfi_offset 14, -4
 1138 0002 8DB0     		sub	sp, sp, #52
 1139              	.LCFI14:
 1140              		.cfi_def_cfa_offset 64
 118:Core/Src/main.c **** 
 1141              		.loc 1 118 3 view .LVU298
 1142 0004 FFF7FEFF 		bl	HAL_Init
 1143              	.LVL79:
 125:Core/Src/main.c **** 
 1144              		.loc 1 125 3 view .LVU299
 1145 0008 FFF7FEFF 		bl	SystemClock_Config
 1146              	.LVL80:
 132:Core/Src/main.c ****   MX_DMA_Init();
 1147              		.loc 1 132 3 view .LVU300
 1148 000c FFF7FEFF 		bl	MX_GPIO_Init
 1149              	.LVL81:
 133:Core/Src/main.c ****   MX_FDCAN1_Init();
 1150              		.loc 1 133 3 view .LVU301
 1151 0010 FFF7FEFF 		bl	MX_DMA_Init
 1152              	.LVL82:
 134:Core/Src/main.c ****   MX_ADC1_Init();
 1153              		.loc 1 134 3 view .LVU302
 1154 0014 FFF7FEFF 		bl	MX_FDCAN1_Init
 1155              	.LVL83:
 135:Core/Src/main.c ****   MX_FDCAN2_Init();
 1156              		.loc 1 135 3 view .LVU303
 1157 0018 FFF7FEFF 		bl	MX_ADC1_Init
 1158              	.LVL84:
 136:Core/Src/main.c ****   MX_TIM4_Init();
 1159              		.loc 1 136 3 view .LVU304
 1160 001c FFF7FEFF 		bl	MX_FDCAN2_Init
 1161              	.LVL85:
 137:Core/Src/main.c ****   MX_SPI2_Init();
 1162              		.loc 1 137 3 view .LVU305
ARM GAS  /tmp/ccmlrpaU.s 			page 38


 1163 0020 FFF7FEFF 		bl	MX_TIM4_Init
 1164              	.LVL86:
 138:Core/Src/main.c ****   MX_IWDG_Init();
 1165              		.loc 1 138 3 view .LVU306
 1166 0024 FFF7FEFF 		bl	MX_SPI2_Init
 1167              	.LVL87:
 139:Core/Src/main.c ****   MX_USB_Device_Init();
 1168              		.loc 1 139 3 view .LVU307
 1169 0028 FFF7FEFF 		bl	MX_IWDG_Init
 1170              	.LVL88:
 140:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1171              		.loc 1 140 3 view .LVU308
 1172 002c FFF7FEFF 		bl	MX_USB_Device_Init
 1173              	.LVL89:
 144:Core/Src/main.c ****   HAL_FDCAN_Start(&hfdcan2);
 1174              		.loc 1 144 3 view .LVU309
 1175 0030 3B4D     		ldr	r5, .L75
 1176 0032 2800     		movs	r0, r5
 1177 0034 FFF7FEFF 		bl	HAL_FDCAN_Start
 1178              	.LVL90:
 145:Core/Src/main.c **** 
 1179              		.loc 1 145 3 view .LVU310
 1180 0038 3A4C     		ldr	r4, .L75+4
 1181 003a 2000     		movs	r0, r4
 1182 003c FFF7FEFF 		bl	HAL_FDCAN_Start
 1183              	.LVL91:
 148:Core/Src/main.c ****   HAL_FDCAN_ActivateNotification(&hfdcan2, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0);
 1184              		.loc 1 148 3 view .LVU311
 1185 0040 0022     		movs	r2, #0
 1186 0042 0121     		movs	r1, #1
 1187 0044 2800     		movs	r0, r5
 1188 0046 FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 1189              	.LVL92:
 149:Core/Src/main.c **** 
 1190              		.loc 1 149 3 view .LVU312
 1191 004a 0022     		movs	r2, #0
 1192 004c 0121     		movs	r1, #1
 1193 004e 2000     		movs	r0, r4
 1194 0050 FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 1195              	.LVL93:
 152:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_SET);   // Green LED off
 1196              		.loc 1 152 3 view .LVU313
 1197 0054 8021     		movs	r1, #128
 1198 0056 344C     		ldr	r4, .L75+8
 1199 0058 0122     		movs	r2, #1
 1200 005a 8901     		lsls	r1, r1, #6
 1201 005c 2000     		movs	r0, r4
 1202 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1203              	.LVL94:
 153:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);   // Blue LED off
 1204              		.loc 1 153 3 view .LVU314
 1205 0062 8021     		movs	r1, #128
 1206 0064 0122     		movs	r2, #1
 1207 0066 C901     		lsls	r1, r1, #7
 1208 0068 2000     		movs	r0, r4
 1209 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1210              	.LVL95:
ARM GAS  /tmp/ccmlrpaU.s 			page 39


 154:Core/Src/main.c **** 
 1211              		.loc 1 154 3 view .LVU315
 1212 006e 8021     		movs	r1, #128
 1213 0070 0122     		movs	r2, #1
 1214 0072 0902     		lsls	r1, r1, #8
 1215 0074 2000     		movs	r0, r4
 1216 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1217              	.LVL96:
 157:Core/Src/main.c ****   CDC_Transmit_FS(init_msg, sizeof(init_msg) - 1);
 1218              		.loc 1 157 3 view .LVU316
 157:Core/Src/main.c ****   CDC_Transmit_FS(init_msg, sizeof(init_msg) - 1);
 1219              		.loc 1 157 11 is_stmt 0 view .LVU317
 1220 007a 06A8     		add	r0, sp, #24
 1221 007c 2B4B     		ldr	r3, .L75+12
 1222 007e 0200     		movs	r2, r0
 1223 0080 32CB     		ldmia	r3!, {r1, r4, r5}
 1224 0082 32C2     		stmia	r2!, {r1, r4, r5}
 1225 0084 32CB     		ldmia	r3!, {r1, r4, r5}
 1226 0086 32C2     		stmia	r2!, {r1, r4, r5}
 158:Core/Src/main.c **** 
 1227              		.loc 1 158 3 is_stmt 1 view .LVU318
 1228 0088 1721     		movs	r1, #23
 1229 008a FFF7FEFF 		bl	CDC_Transmit_FS
 1230              	.LVL97:
 164:Core/Src/main.c ****   while (1)
 1231              		.loc 1 164 3 view .LVU319
 164:Core/Src/main.c ****   while (1)
 1232              		.loc 1 164 24 is_stmt 0 view .LVU320
 1233 008e FFF7FEFF 		bl	HAL_GetTick
 1234              	.LVL98:
 1235 0092 0500     		movs	r5, r0
 1236 0094 2DE0     		b	.L73
 1237              	.LVL99:
 1238              	.L74:
 173:Core/Src/main.c ****       CDC_Transmit_FS(init_msg, sizeof(init_msg) - 1);
 1239              		.loc 1 173 7 is_stmt 1 view .LVU321
 173:Core/Src/main.c ****       CDC_Transmit_FS(init_msg, sizeof(init_msg) - 1);
 1240              		.loc 1 173 19 is_stmt 0 view .LVU322
 1241 0096 FFF7FEFF 		bl	HAL_GetTick
 1242              	.LVL100:
 1243 009a 0500     		movs	r5, r0
 1244              	.LVL101:
 174:Core/Src/main.c ****     }
 1245              		.loc 1 174 7 is_stmt 1 view .LVU323
 1246 009c 1721     		movs	r1, #23
 1247 009e 06A8     		add	r0, sp, #24
 1248              	.LVL102:
 174:Core/Src/main.c ****     }
 1249              		.loc 1 174 7 is_stmt 0 view .LVU324
 1250 00a0 FFF7FEFF 		bl	CDC_Transmit_FS
 1251              	.LVL103:
 1252 00a4 2FE0     		b	.L69
 1253              	.L72:
 1254              	.LBB14:
 188:Core/Src/main.c **** 
 1255              		.loc 1 188 7 is_stmt 1 view .LVU325
 1256              	.LVL104:
ARM GAS  /tmp/ccmlrpaU.s 			page 40


 190:Core/Src/main.c ****       frame.command = CMD_CAN_RECEIVE;
 1257              		.loc 1 190 7 view .LVU326
 191:Core/Src/main.c ****       frame.channel = msg->channel;
 1258              		.loc 1 191 7 view .LVU327
 191:Core/Src/main.c ****       frame.channel = msg->channel;
 1259              		.loc 1 191 21 is_stmt 0 view .LVU328
 1260 00a6 01AC     		add	r4, sp, #4
 1261 00a8 0222     		movs	r2, #2
 1262 00aa 2270     		strb	r2, [r4]
 192:Core/Src/main.c ****       frame.id = msg->id;
 1263              		.loc 1 192 7 is_stmt 1 view .LVU329
 192:Core/Src/main.c ****       frame.id = msg->id;
 1264              		.loc 1 192 26 is_stmt 0 view .LVU330
 1265 00ac 204A     		ldr	r2, .L75+16
 1266 00ae 1B01     		lsls	r3, r3, #4
 1267              	.LVL105:
 192:Core/Src/main.c ****       frame.id = msg->id;
 1268              		.loc 1 192 26 view .LVU331
 1269 00b0 D118     		adds	r1, r2, r3
 1270              	.LVL106:
 192:Core/Src/main.c ****       frame.id = msg->id;
 1271              		.loc 1 192 26 view .LVU332
 1272 00b2 487B     		ldrb	r0, [r1, #13]
 192:Core/Src/main.c ****       frame.id = msg->id;
 1273              		.loc 1 192 21 view .LVU333
 1274 00b4 6070     		strb	r0, [r4, #1]
 193:Core/Src/main.c ****       frame.dlc = msg->dlc;
 1275              		.loc 1 193 7 is_stmt 1 view .LVU334
 193:Core/Src/main.c ****       frame.dlc = msg->dlc;
 1276              		.loc 1 193 21 is_stmt 0 view .LVU335
 1277 00b6 9B58     		ldr	r3, [r3, r2]
 193:Core/Src/main.c ****       frame.dlc = msg->dlc;
 1278              		.loc 1 193 16 view .LVU336
 1279 00b8 0293     		str	r3, [sp, #8]
 194:Core/Src/main.c ****       memcpy(frame.data, msg->data, 8);
 1280              		.loc 1 194 7 is_stmt 1 view .LVU337
 194:Core/Src/main.c ****       memcpy(frame.data, msg->data, 8);
 1281              		.loc 1 194 22 is_stmt 0 view .LVU338
 1282 00ba 0B79     		ldrb	r3, [r1, #4]
 194:Core/Src/main.c ****       memcpy(frame.data, msg->data, 8);
 1283              		.loc 1 194 17 view .LVU339
 1284 00bc 2372     		strb	r3, [r4, #8]
 195:Core/Src/main.c **** 
 1285              		.loc 1 195 7 is_stmt 1 view .LVU340
 1286 00be 0531     		adds	r1, r1, #5
 1287              	.LVL107:
 195:Core/Src/main.c **** 
 1288              		.loc 1 195 7 is_stmt 0 view .LVU341
 1289 00c0 0822     		movs	r2, #8
 1290 00c2 0D20     		movs	r0, #13
 1291 00c4 6844     		add	r0, r0, sp
 1292 00c6 FFF7FEFF 		bl	memcpy
 1293              	.LVL108:
 197:Core/Src/main.c **** 
 1294              		.loc 1 197 7 is_stmt 1 view .LVU342
 1295 00ca 1421     		movs	r1, #20
 1296 00cc 2000     		movs	r0, r4
ARM GAS  /tmp/ccmlrpaU.s 			page 41


 1297 00ce FFF7FEFF 		bl	send_usb_response
 1298              	.LVL109:
 199:Core/Src/main.c ****     }
 1299              		.loc 1 199 7 view .LVU343
 199:Core/Src/main.c ****     }
 1300              		.loc 1 199 46 is_stmt 0 view .LVU344
 1301 00d2 184C     		ldr	r4, .L75+20
 1302 00d4 2078     		ldrb	r0, [r4]
 1303 00d6 0130     		adds	r0, r0, #1
 199:Core/Src/main.c ****     }
 1304              		.loc 1 199 51 view .LVU345
 1305 00d8 0A21     		movs	r1, #10
 1306 00da FFF7FEFF 		bl	__aeabi_idivmod
 1307              	.LVL110:
 199:Core/Src/main.c ****     }
 1308              		.loc 1 199 25 view .LVU346
 1309 00de 2170     		strb	r1, [r4]
 1310              	.LVL111:
 1311              	.L71:
 199:Core/Src/main.c ****     }
 1312              		.loc 1 199 25 view .LVU347
 1313              	.LBE14:
 187:Core/Src/main.c ****       can_message_t *msg = &can_rx_queue[can_rx_queue_tail];
 1314              		.loc 1 187 30 is_stmt 1 view .LVU348
 1315 00e0 144B     		ldr	r3, .L75+20
 1316 00e2 1B78     		ldrb	r3, [r3]
 1317 00e4 144A     		ldr	r2, .L75+24
 1318 00e6 1278     		ldrb	r2, [r2]
 1319 00e8 9A42     		cmp	r2, r3
 1320 00ea DCD1     		bne	.L72
 202:Core/Src/main.c ****   }
 1321              		.loc 1 202 5 view .LVU349
 1322 00ec 0120     		movs	r0, #1
 1323 00ee FFF7FEFF 		bl	HAL_Delay
 1324              	.LVL112:
 165:Core/Src/main.c ****   {
 1325              		.loc 1 165 9 view .LVU350
 1326              	.L73:
 165:Core/Src/main.c ****   {
 1327              		.loc 1 165 3 view .LVU351
 171:Core/Src/main.c ****     if (HAL_GetTick() - last_time > 1000) {
 1328              		.loc 1 171 5 view .LVU352
 1329 00f2 1248     		ldr	r0, .L75+28
 1330 00f4 FFF7FEFF 		bl	HAL_IWDG_Refresh
 1331              	.LVL113:
 172:Core/Src/main.c ****       last_time = HAL_GetTick();
 1332              		.loc 1 172 5 view .LVU353
 172:Core/Src/main.c ****       last_time = HAL_GetTick();
 1333              		.loc 1 172 9 is_stmt 0 view .LVU354
 1334 00f8 FFF7FEFF 		bl	HAL_GetTick
 1335              	.LVL114:
 172:Core/Src/main.c ****       last_time = HAL_GetTick();
 1336              		.loc 1 172 23 discriminator 1 view .LVU355
 1337 00fc 401B     		subs	r0, r0, r5
 172:Core/Src/main.c ****       last_time = HAL_GetTick();
 1338              		.loc 1 172 8 discriminator 1 view .LVU356
 1339 00fe FA23     		movs	r3, #250
ARM GAS  /tmp/ccmlrpaU.s 			page 42


 1340 0100 9B00     		lsls	r3, r3, #2
 1341 0102 9842     		cmp	r0, r3
 1342 0104 C7D8     		bhi	.L74
 1343              	.L69:
 178:Core/Src/main.c **** 
 1344              		.loc 1 178 5 is_stmt 1 view .LVU357
 1345 0106 FFF7FEFF 		bl	update_led_status
 1346              	.LVL115:
 181:Core/Src/main.c ****       process_usb_command(usb_rx_buffer, usb_rx_index);
 1347              		.loc 1 181 5 view .LVU358
 181:Core/Src/main.c ****       process_usb_command(usb_rx_buffer, usb_rx_index);
 1348              		.loc 1 181 22 is_stmt 0 view .LVU359
 1349 010a 0D4B     		ldr	r3, .L75+32
 1350 010c 1978     		ldrb	r1, [r3]
 181:Core/Src/main.c ****       process_usb_command(usb_rx_buffer, usb_rx_index);
 1351              		.loc 1 181 8 view .LVU360
 1352 010e 0029     		cmp	r1, #0
 1353 0110 E6D0     		beq	.L71
 182:Core/Src/main.c ****       usb_rx_index = 0;
 1354              		.loc 1 182 7 is_stmt 1 view .LVU361
 1355 0112 0C48     		ldr	r0, .L75+36
 1356 0114 FFF7FEFF 		bl	process_usb_command
 1357              	.LVL116:
 183:Core/Src/main.c ****     }
 1358              		.loc 1 183 7 view .LVU362
 183:Core/Src/main.c ****     }
 1359              		.loc 1 183 20 is_stmt 0 view .LVU363
 1360 0118 094B     		ldr	r3, .L75+32
 1361 011a 0022     		movs	r2, #0
 1362 011c 1A70     		strb	r2, [r3]
 1363 011e DFE7     		b	.L71
 1364              	.L76:
 1365              		.align	2
 1366              	.L75:
 1367 0120 00000000 		.word	hfdcan1
 1368 0124 00000000 		.word	hfdcan2
 1369 0128 00080050 		.word	1342179328
 1370 012c 00000000 		.word	.LC29
 1371 0130 00000000 		.word	can_rx_queue
 1372 0134 00000000 		.word	can_rx_queue_tail
 1373 0138 00000000 		.word	can_rx_queue_head
 1374 013c 00000000 		.word	hiwdg
 1375 0140 00000000 		.word	usb_rx_index
 1376 0144 00000000 		.word	usb_rx_buffer
 1377              		.cfi_endproc
 1378              	.LFE500:
 1380              		.section	.bss.led_state.0,"aw",%nobits
 1383              	led_state.0:
 1384 0000 00       		.space	1
 1385              		.section	.bss.led_timer.1,"aw",%nobits
 1386              		.align	2
 1389              	led_timer.1:
 1390 0000 00000000 		.space	4
 1391              		.section	.bss.can2_terminator_enabled,"aw",%nobits
 1394              	can2_terminator_enabled:
 1395 0000 00       		.space	1
 1396              		.section	.bss.can1_terminator_enabled,"aw",%nobits
ARM GAS  /tmp/ccmlrpaU.s 			page 43


 1399              	can1_terminator_enabled:
 1400 0000 00       		.space	1
 1401              		.section	.bss.can2_tx_count,"aw",%nobits
 1402              		.align	2
 1405              	can2_tx_count:
 1406 0000 00000000 		.space	4
 1407              		.section	.bss.can1_tx_count,"aw",%nobits
 1408              		.align	2
 1411              	can1_tx_count:
 1412 0000 00000000 		.space	4
 1413              		.section	.bss.can2_rx_count,"aw",%nobits
 1414              		.align	2
 1417              	can2_rx_count:
 1418 0000 00000000 		.space	4
 1419              		.section	.bss.can1_rx_count,"aw",%nobits
 1420              		.align	2
 1423              	can1_rx_count:
 1424 0000 00000000 		.space	4
 1425              		.section	.bss.can_rx_queue_tail,"aw",%nobits
 1428              	can_rx_queue_tail:
 1429 0000 00       		.space	1
 1430              		.section	.bss.can_rx_queue_head,"aw",%nobits
 1433              	can_rx_queue_head:
 1434 0000 00       		.space	1
 1435              		.section	.bss.can_rx_queue,"aw",%nobits
 1436              		.align	2
 1439              	can_rx_queue:
 1440 0000 00000000 		.space	160
 1440      00000000 
 1440      00000000 
 1440      00000000 
 1440      00000000 
 1441              		.global	usb_tx_index
 1442              		.section	.bss.usb_tx_index,"aw",%nobits
 1445              	usb_tx_index:
 1446 0000 00       		.space	1
 1447              		.global	usb_rx_index
 1448              		.section	.bss.usb_rx_index,"aw",%nobits
 1451              	usb_rx_index:
 1452 0000 00       		.space	1
 1453              		.global	usb_tx_buffer
 1454              		.section	.bss.usb_tx_buffer,"aw",%nobits
 1455              		.align	2
 1458              	usb_tx_buffer:
 1459 0000 00000000 		.space	64
 1459      00000000 
 1459      00000000 
 1459      00000000 
 1459      00000000 
 1460              		.global	usb_rx_buffer
 1461              		.section	.bss.usb_rx_buffer,"aw",%nobits
 1462              		.align	2
 1465              	usb_rx_buffer:
 1466 0000 00000000 		.space	64
 1466      00000000 
 1466      00000000 
 1466      00000000 
ARM GAS  /tmp/ccmlrpaU.s 			page 44


 1466      00000000 
 1467              		.text
 1468              	.Letext0:
 1469              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1470              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1471              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0b1xx.h"
 1472              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 1473              		.file 7 "/usr/lib/gcc/arm-none-eabi/14.2.0/include/stddef.h"
 1474              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1475              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 1476              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc_ex.h"
 1477              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 1478              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 1479              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_fdcan.h"
 1480              		.file 14 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_iwdg.h"
 1481              		.file 15 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 1482              		.file 16 "Core/Inc/main.h"
 1483              		.file 17 "Core/Inc/fdcan.h"
 1484              		.file 18 "Core/Inc/iwdg.h"
 1485              		.file 19 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 1486              		.file 20 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 1487              		.file 21 "/usr/arm-none-eabi/include/string.h"
 1488              		.file 22 "/usr/arm-none-eabi/include/stdio.h"
 1489              		.file 23 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 1490              		.file 24 "USB_Device/App/usbd_cdc_if.h"
 1491              		.file 25 "USB_Device/App/usb_device.h"
 1492              		.file 26 "Core/Inc/spi.h"
 1493              		.file 27 "Core/Inc/tim.h"
 1494              		.file 28 "Core/Inc/adc.h"
 1495              		.file 29 "Core/Inc/dma.h"
 1496              		.file 30 "Core/Inc/gpio.h"
 1497              		.file 31 "<built-in>"
ARM GAS  /tmp/ccmlrpaU.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccmlrpaU.s:19     .text.update_led_status:00000000 $t
     /tmp/ccmlrpaU.s:24     .text.update_led_status:00000000 update_led_status
     /tmp/ccmlrpaU.s:124    .text.update_led_status:00000074 $d
     /tmp/ccmlrpaU.s:1389   .bss.led_timer.1:00000000 led_timer.1
     /tmp/ccmlrpaU.s:1383   .bss.led_state.0:00000000 led_state.0
     /tmp/ccmlrpaU.s:1423   .bss.can1_rx_count:00000000 can1_rx_count
     /tmp/ccmlrpaU.s:1417   .bss.can2_rx_count:00000000 can2_rx_count
     /tmp/ccmlrpaU.s:1411   .bss.can1_tx_count:00000000 can1_tx_count
     /tmp/ccmlrpaU.s:1405   .bss.can2_tx_count:00000000 can2_tx_count
     /tmp/ccmlrpaU.s:135    .text.send_usb_response:00000000 $t
     /tmp/ccmlrpaU.s:140    .text.send_usb_response:00000000 send_usb_response
     /tmp/ccmlrpaU.s:163    .text.send_can_message:00000000 $t
     /tmp/ccmlrpaU.s:168    .text.send_can_message:00000000 send_can_message
     /tmp/ccmlrpaU.s:276    .text.send_can_message:00000054 $d
     /tmp/ccmlrpaU.s:284    .rodata.process_usb_command.str1.4:00000000 $d
     /tmp/ccmlrpaU.s:291    .text.process_usb_command:00000000 $t
     /tmp/ccmlrpaU.s:296    .text.process_usb_command:00000000 process_usb_command
     /tmp/ccmlrpaU.s:518    .text.process_usb_command:000000e0 $d
     /tmp/ccmlrpaU.s:1394   .bss.can2_terminator_enabled:00000000 can2_terminator_enabled
     /tmp/ccmlrpaU.s:1399   .bss.can1_terminator_enabled:00000000 can1_terminator_enabled
     /tmp/ccmlrpaU.s:531    .text.receive_can_message:00000000 $t
     /tmp/ccmlrpaU.s:536    .text.receive_can_message:00000000 receive_can_message
     /tmp/ccmlrpaU.s:659    .text.receive_can_message:00000064 $d
     /tmp/ccmlrpaU.s:1433   .bss.can_rx_queue_head:00000000 can_rx_queue_head
     /tmp/ccmlrpaU.s:1428   .bss.can_rx_queue_tail:00000000 can_rx_queue_tail
     /tmp/ccmlrpaU.s:1439   .bss.can_rx_queue:00000000 can_rx_queue
     /tmp/ccmlrpaU.s:670    .text.HAL_FDCAN_RxFifo0Callback:00000000 $t
     /tmp/ccmlrpaU.s:676    .text.HAL_FDCAN_RxFifo0Callback:00000000 HAL_FDCAN_RxFifo0Callback
     /tmp/ccmlrpaU.s:737    .text.HAL_FDCAN_RxFifo0Callback:0000002c $d
     /tmp/ccmlrpaU.s:743    .text.HAL_FDCAN_TxEventFifoCallback:00000000 $t
     /tmp/ccmlrpaU.s:749    .text.HAL_FDCAN_TxEventFifoCallback:00000000 HAL_FDCAN_TxEventFifoCallback
     /tmp/ccmlrpaU.s:765    .text.HAL_FDCAN_ErrorCallback:00000000 $t
     /tmp/ccmlrpaU.s:771    .text.HAL_FDCAN_ErrorCallback:00000000 HAL_FDCAN_ErrorCallback
     /tmp/ccmlrpaU.s:825    .text.HAL_FDCAN_ErrorCallback:00000028 $d
     /tmp/ccmlrpaU.s:832    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccmlrpaU.s:838    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccmlrpaU.s:873    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
     /tmp/ccmlrpaU.s:878    .text.Error_Handler:00000000 $t
     /tmp/ccmlrpaU.s:884    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccmlrpaU.s:916    .text.SystemClock_Config:00000000 $t
     /tmp/ccmlrpaU.s:922    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccmlrpaU.s:1110   .text.SystemClock_Config:000000c8 $d
     /tmp/ccmlrpaU.s:1116   .rodata.main.str1.4:00000000 $d
     /tmp/ccmlrpaU.s:1120   .text.main:00000000 $t
     /tmp/ccmlrpaU.s:1126   .text.main:00000000 main
     /tmp/ccmlrpaU.s:1367   .text.main:00000120 $d
     /tmp/ccmlrpaU.s:1451   .bss.usb_rx_index:00000000 usb_rx_index
     /tmp/ccmlrpaU.s:1465   .bss.usb_rx_buffer:00000000 usb_rx_buffer
     /tmp/ccmlrpaU.s:1384   .bss.led_state.0:00000000 $d
     /tmp/ccmlrpaU.s:1386   .bss.led_timer.1:00000000 $d
     /tmp/ccmlrpaU.s:1395   .bss.can2_terminator_enabled:00000000 $d
     /tmp/ccmlrpaU.s:1400   .bss.can1_terminator_enabled:00000000 $d
     /tmp/ccmlrpaU.s:1402   .bss.can2_tx_count:00000000 $d
     /tmp/ccmlrpaU.s:1408   .bss.can1_tx_count:00000000 $d
     /tmp/ccmlrpaU.s:1414   .bss.can2_rx_count:00000000 $d
ARM GAS  /tmp/ccmlrpaU.s 			page 46


     /tmp/ccmlrpaU.s:1420   .bss.can1_rx_count:00000000 $d
     /tmp/ccmlrpaU.s:1429   .bss.can_rx_queue_tail:00000000 $d
     /tmp/ccmlrpaU.s:1434   .bss.can_rx_queue_head:00000000 $d
     /tmp/ccmlrpaU.s:1436   .bss.can_rx_queue:00000000 $d
     /tmp/ccmlrpaU.s:1445   .bss.usb_tx_index:00000000 usb_tx_index
     /tmp/ccmlrpaU.s:1446   .bss.usb_tx_index:00000000 $d
     /tmp/ccmlrpaU.s:1452   .bss.usb_rx_index:00000000 $d
     /tmp/ccmlrpaU.s:1458   .bss.usb_tx_buffer:00000000 usb_tx_buffer
     /tmp/ccmlrpaU.s:1455   .bss.usb_tx_buffer:00000000 $d
     /tmp/ccmlrpaU.s:1462   .bss.usb_rx_buffer:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
CDC_Transmit_FS
HAL_FDCAN_AddMessageToTxFifoQ
hfdcan2
hfdcan1
snprintf
strlen
memcpy
HAL_FDCAN_GetRxMessage
__aeabi_idivmod
HAL_GPIO_TogglePin
HAL_IncTick
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_CRSConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_FDCAN1_Init
MX_ADC1_Init
MX_FDCAN2_Init
MX_TIM4_Init
MX_SPI2_Init
MX_IWDG_Init
MX_USB_Device_Init
HAL_FDCAN_Start
HAL_FDCAN_ActivateNotification
HAL_GetTick
HAL_Delay
HAL_IWDG_Refresh
hiwdg
